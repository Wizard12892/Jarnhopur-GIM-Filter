/*@ define:module:header
hidden: true
name: header
*/

meta { name = "Jarnhopur's Test Filter"; description = "Testing Updates before pushing to main."; }

/*@ define:module:welcome
name: Welcome
subtitle: Welcome to Jarnhopur's Filter
description: |
    Here is my personal filters for my GIM team. I like the default runelite ground markers for the most part so this filter has only minor UI/Graphical updates, alongside area/monster specific hide rules and dedicated setups for PvM drops.
*/

/*@ define:module:settings
name: Settings
subtitle: Basic Settings 
*/

/*@ define:input:settings
label: Group Member Drops
type: boolean
group: Ownership
*/
#define SHOW_GROUP_DROPS true

apply (!SHOW_GROUP_DROPS && ownership:3) {hidden = true;}

/*@ define:input:settings
label: Unowned Drops
type: boolean
group: Ownership
*/
#define SHOW_OTHER_DROPS false

apply (!SHOW_OTHER_DROPS && ownership:2) {hidden = true;}

/*@ define:input:settings
label: Item Spawns
type: boolean
group: Ownership
*/
#define SHOW_GLOBAL_DROPS true

/*@ define:input:ownership
type: stringlist
group: Ownership
label: Ignore ownership value for these items
*/
#define VAR_OWNERSHIP_IGNORE ["Dawnbringer"]

apply (!SHOW_GLOBAL_DROPS && ownership:0) {hidden = true;}

rule (SHOW_GROUP_DROPS && SHOW_OTHER_DROPS && SHOW_GLOBAL_DROPS && !name:VAR_OWNERSHIP_IGNORE)
{
    hidden = true;
}

/*@ define:input:settings
label: Show Despawn Timer
type: boolean
group: Global
*/
#define SHOW_DEPSAWN_TIMER true

apply (SHOW_DEPSAWN_TIMER) {showDespawn = true;}

/*@ define:input:settings
label: Show Item Value
type: boolean
group: Global
*/
#define SHOW_ITEM_VALUE true

apply (SHOW_ITEM_VALUE) {showDespawn = true;}

/*@ define:input:defaults
type: style
group: Default Style
label: Default Style
*/
#define VAR_DEFAULTS_STYLE hidden = false;

apply (true) { VAR_DEFAULTS_STYLE }

/*@ define:module:sorting
---
name: Sorting
subtitle: Picking up the good stuff first
description: |
  This allows you to order the pickup menu in a few different ways.

  NOTE: This requires that "Price Sort" in the "Custom Menu Swaps" plugin under "Ground Item Sort" to be DISABLED.
*/

/*@ define:module:filtering
---
name: Filtering
subtitle: Sifting through the junk
description: |
  Provides a few different ways to filter out items.
*/

/*@ define:group
---
name: Individual Items
description: |
  Individual Items
  ---

  Showing and hiding individual items.
*/

/*@ define:module:foodandpotions
name: Food and Potions
subtitle: Find your supply drops with ease.
*/

/*@ define:module:alchs
name: Alchables
subtitle: Easily identify high value alchables.
*/

/*@ define:module:herbs
name: Herbs
subtitle: Find your herbs with ease.
*/

/*@ define:module:seeds
name: Seeds
subtitle: Find your seeds with ease.
*/

/*@ define:module:values
name: Item Value Customization
subtitle: Set the GP amount for the tier system. 
*/

/*@ define:input:values
type: number
label: Hidden
group: Values
*/
#define VALUE_TIER_0 250

rule (VALUE_TIER_0>)

/*@ define:input:values
type: number
label: Tier 1
group: Values
*/
#define VALUE_TIER_1 50000

/*@ define:input:values
type: number
label: Tier 2
group: Values
*/
#define VALUE_TIER_2 100000

/*@ define:input:values
type: number
label: Tier 3
group: Values
*/
#define VALUE_TIER_3 500000

/*@ define:input:values
type: number
label: Tier 4
group: Values
*/
#define VALUE_TIER_4 1000000

/*@ define:input:values
type: number
label: Tier 5
group: Values
*/
#define VALUE_TIER_5 10000000

/*@ define:input:values
type: text
label: Tier 1
group: Drop Sounds
*/
#define TIER_1_SOUND "Tier1.wav"

/*@ define:input:values
type: text
label: Tier 2
group: Drop Sounds
*/
#define TIER_2_SOUND "Tier2.wav"

/*@ define:input:values
type: text
label: Tier 3
group: Drop Sounds
*/
#define TIER_3_SOUND "Tier3.wav"

/*@ define:input:values
type: text
label: Tier 4
group: Drop Sounds
*/
#define TIER_4_SOUND "Tier4.wav"

/*@ define:input:values
type: text
label: Tier 5
group: Drop Sounds
*/
#define TIER_5_SOUND "Tier5.wav"

/*@ define:module:hidejunk
name: Junk Filtering
subtitle: Filter junk items
description: |
  This should generally eliminate the need for a massive
  hide list in your plugin config.

  All of these rules hide BY DEFAULT unless otherwise stated. Value rules and
  other things can override them.
*/

/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Bronze equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_BRONZE true

#define CONST_JUNK_EQUIP_BRONZE ["Bronze dagger","Bronze mace","Bronze sword","Bronze longsword","Bronze scimitar","Bronze hasta","Bronze warhammer","Bronze claws","Bronze 2h sword","Bronze halberd","Bronze crossbow","Bronze bolts","Bronze arrow","Bronze brutal","Bronze dart","Bronze javelin","Bronze knife","Bronze med helm","Bronze full helm","Bronze chainbody","Bronze platebody","Bronze platelegs","Bronze plateskirt","Bronze sq shield","Bronze kiteshield","Bronze gloves"]
apply (VAR_JUNK_HIDE_EQUIP_BRONZE && name:CONST_JUNK_EQUIP_BRONZE) { hidden = true; }
/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Iron equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_IRON true

#define CONST_JUNK_EQUIP_IRON ["Iron dagger","Iron mace","Iron sword","Iron longsword","Iron scimitar","Iron hasta","Iron warhammer","Iron claws","Iron 2h sword","Iron halberd","Iron crossbow","Iron bolts","Iron arrow","Iron brutal","Iron dart","Iron javelin","Iron knife","Iron med helm","Iron full helm","Iron chainbody","Iron platebody","Iron platelegs","Iron plateskirt","Iron sq shield","Iron kiteshield","Iron gloves"]
apply (VAR_JUNK_HIDE_EQUIP_IRON && name:CONST_JUNK_EQUIP_IRON) { hidden = true; }
/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Steel equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_STEEL true

#define CONST_JUNK_EQUIP_STEEL ["Steel dagger","Steel mace","Steel sword","Steel longsword","Steel scimitar","Steel hasta","Steel warhammer","Steel claws","Steel 2h sword","Steel halberd","Steel crossbow","Steel bolts","Steel arrow","Steel brutal","Steel dart","Steel javelin","Steel knife","Steel med helm","Steel full helm","Steel chainbody","Steel platebody","Steel platelegs","Steel plateskirt","Steel sq shield","Steel kiteshield","Steel gloves"]
apply (VAR_JUNK_HIDE_EQUIP_STEEL && name:CONST_JUNK_EQUIP_STEEL) { hidden = true; }
/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Black equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_BLACK true

#define CONST_JUNK_EQUIP_BLACK ["Black dagger","Black mace","Black sword","Black longsword","Black scimitar","Black warhammer","Black claws","Black 2h sword","Black halberd","Black brutal","Black dart","Black knife","Black med helm","Black full helm","Black chainbody","Black platebody","Black platelegs","Black plateskirt","Black sq shield","Black kiteshield","Black gloves","Elite black full helm","Elite black platebody","Elite black platelegs"]
apply (VAR_JUNK_HIDE_EQUIP_BLACK && name:CONST_JUNK_EQUIP_BLACK) { hidden = true; }
/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Mithril equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_MITHRIL true

#define CONST_JUNK_EQUIP_MITHRIL []
apply (VAR_JUNK_HIDE_EQUIP_MITHRIL && name:CONST_JUNK_EQUIP_MITHRIL) { hidden = true; }
/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Adamant equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_ADAMANT false

#define CONST_JUNK_EQUIP_ADAMANT ["Adamant dagger","Adamant mace","Adamant sword","Adamant longsword","Adamant scimitar","Adamant hasta","Adamant warhammer","Adamant cane","Adamant claws","Adamant 2h sword","Adamant halberd","Adamant crossbow","Adamant bolts","Adamant arrow","Adamant brutal","Adamant dart","Adamant javelin","Adamant knife","Adamant med helm","Adamant full helm","Adamant chainbody","Adamant platebody","Adamant platelegs","Adamant plateskirt","Adamant sq shield","Adamant kiteshield","Adamant gloves"]
apply (VAR_JUNK_HIDE_EQUIP_ADAMANT && name:CONST_JUNK_EQUIP_ADAMANT) { hidden = true; }
/*@ define:input
type: boolean
group: 'Equipment'
label: 'Hide Rune equipment'
*/
#define VAR_JUNK_HIDE_EQUIP_RUNE false

#define CONST_JUNK_EQUIP_RUNE ["Rune dagger","Rune mace","Rune sword","Rune longsword","Rune scimitar","Rune hasta","Rune warhammer","Rune claws","Rune 2h sword","Rune halberd","Rune crossbow","Runite bolts","Rune arrow","Rune brutal","Rune dart","Rune javelin","Rune knife","Rune med helm","Rune full helm","Rune chainbody","Rune platebody","Rune platelegs","Rune plateskirt","Rune sq shield","Rune kiteshield","Rune gloves"]
apply (VAR_JUNK_HIDE_EQUIP_RUNE && name:CONST_JUNK_EQUIP_RUNE) { hidden = true; }

/*@ define:input
type: boolean
group: 'Seeds'
label: 'Hide Low-Tier Allotment seeds'
*/
#define VAR_JUNK_HIDE_SEED_ALLOTMENT true

#define CONST_JUNK_SEED_ALLOTMENT ["Potato seed","Onion seed","Cabbage seed","Tomato seed","Sweetcorn seed","Strawberry seed"]
apply (VAR_JUNK_HIDE_SEED_ALLOTMENT && name:CONST_JUNK_SEED_ALLOTMENT) { hidden = true; }

/*@ define:input
type: boolean
group: 'Seeds'
label: 'Hide High-Tier Allotment seeds'
*/
#define VAR_JUNK_HIDE_SEED_ALLOTMENT_HIGH false

#define CONST_JUNK_SEED_ALLOTMENT_HIGH ["Watermelon seed","Snape grass seed"]
apply (VAR_JUNK_HIDE_SEED_ALLOTMENT_HIGH && name:CONST_JUNK_SEED_ALLOTMENT_HIGH) { hidden = true; }

/*@ define:input
type: boolean
group: 'Seeds'
label: 'Hide Low-Tier Flower seeds'
*/
#define VAR_JUNK_HIDE_SEED_FLOWER true

#define CONST_JUNK_SEED_FLOWER ["Marigold seed","Rosemary seed","Nasturtium seed","Woad seed"]
apply (VAR_JUNK_HIDE_SEED_FLOWER && name:CONST_JUNK_SEED_FLOWER) { hidden = true; }

/*@ define:input
type: boolean
group: 'Seeds'
label: 'Hide High-Tier Flower seeds'
*/
#define VAR_JUNK_HIDE_SEED_FLOWER_HIGH false

#define CONST_JUNK_SEED_FLOWER_HIGH ["Limpwurt seed","White lily seed"]
apply (VAR_JUNK_HIDE_SEED_FLOWER_HIGH && name:CONST_JUNK_SEED_FLOWER_HIGH) { hidden = true; }

/*@ define:input
type: boolean
group: 'Seeds'
label: 'Hide Hops seeds'
*/
#define VAR_JUNK_HIDE_SEED_HOPS true

#define CONST_JUNK_SEED_HOPS ["Barley seed","Hammerstone seed","Asgarnian seed","Jute seed","Yanillian seed","Krandorian seed","Wildblood seed"]
apply (VAR_JUNK_HIDE_SEED_HOPS && name:CONST_JUNK_SEED_HOPS) { hidden = true; }
/*@ define:input
type: boolean
group: 'Seeds'
label: 'Hide Bush seeds'
*/
#define VAR_JUNK_HIDE_SEED_BUSH true

#define CONST_JUNK_SEED_BUSH ["Redberry seed","Cadavaberry seed","Dwellberry seed","Jangerberry seed","Whiteberry seed","Poison ivy seed"]
apply (VAR_JUNK_HIDE_SEED_BUSH && name:CONST_JUNK_SEED_BUSH) { hidden = true; }

/*@ define:input
type: boolean
group: 'Clue Uniques'
label: 'Hide Beginner Uniques'
*/
#define VAR_JUNK_HIDE_UNIQUE_CLUE_BEGINNER false

#define CONST_JUNK_UNIQUE_CLUE_BEGINNER ["Mole slippers","Frog slippers","Bear feet","Demon feet","Jester cape","Shoulder parrot","Monk's robe top (t)","Monk's robe (t)","Amulet of defence (t)","Sandwich lady hat","Sandwich lady top","Sandwich lady bottom","Rune scimitar ornament kit (guthix)","Rune scimitar ornament kit (saradomin)","Rune scimitar ornament kit (zamorak)"]
apply (VAR_JUNK_HIDE_UNIQUE_CLUE_BEGINNER && name:CONST_JUNK_UNIQUE_CLUE_BEGINNER) { hidden = true; }
/*@ define:input
type: boolean
group: 'Clue Uniques'
label: 'Hide Easy Uniques'
*/
#define VAR_JUNK_HIDE_UNIQUE_CLUE_EASY false

#define CONST_JUNK_UNIQUE_CLUE_EASY ["Team cape zero","Team cape i","Team cape x","Cape of skulls","Golden chef's hat","Golden apron","Wooden shield (g)","Black full helm (t)","Black platebody (t)","Black platelegs (t)","Black plateskirt (t)","Black kiteshield (t)","Black full helm (g)","Black platebody (g)","Black platelegs (g)","Black plateskirt (g)","Black kiteshield (g)","Black shield (h1)","Black shield (h2)","Black shield (h3)","Black shield (h4)","Black shield (h5)","Black helm (h1)","Black helm (h2)","Black helm (h3)","Black helm (h4)","Black helm (h5)","Black platebody (h1)","Black platebody (h2)","Black platebody (h3)","Black platebody (h4)","Black platebody (h5)","Steel full helm (t)","Steel platebody (t)","Steel platelegs (t)","Steel plateskirt (t)","Steel kiteshield (t)","Steel full helm (g)","Steel platebody (g)","Steel platelegs (g)","Steel plateskirt (g)","Steel kiteshield (g)","Iron full helm (t)","Iron platebody (t)","Iron platelegs (t)","Iron plateskirt (t)","Iron kiteshield (t)","Iron full helm (g)","Iron platebody (g)","Iron platelegs (g)","Iron plateskirt (g)","Iron kiteshield (g)","Bronze full helm (t)","Bronze platebody (t)","Bronze platelegs (t)","Bronze plateskirt (t)","Bronze kiteshield (t)","Bronze full helm (g)","Bronze platebody (g)","Bronze platelegs (g)","Bronze plateskirt (g)","Bronze kiteshield (g)","Studded body (g)","Studded chaps (g)","Studded body (t)","Studded chaps (t)","Leather body (g)","Leather chaps (g)","Blue wizard hat (g)","Blue wizard robe (g)","Blue skirt (g)","Blue wizard hat (t)","Blue wizard robe (t)","Blue skirt (t)","Black wizard hat (g)","Black wizard robe (g)","Black skirt (g)","Black wizard hat (t)","Black wizard robe (t)","Black skirt (t)","Monk's robe top (g)","Monk's robe (g)","Saradomin robe top","Saradomin robe legs","Guthix robe top","Guthix robe legs","Zamorak robe top","Zamorak robe legs","Ancient robe top","Ancient robe legs","Armadyl robe top","Armadyl robe legs","Bandos robe top","Bandos robe legs","Bob's red shirt","Bob's green shirt","Bob's blue shirt","Bob's black shirt","Bob's purple shirt","Highwayman mask","Blue beret","Black beret","Red beret","White beret","A powdered wig","Beanie","Imp mask","Goblin mask","Sleeping cap","Flared trousers","Pantaloons","Black cane","Staff of bob the cat","Red elegant shirt","Red elegant blouse","Red elegant legs","Red elegant skirt","Green elegant shirt","Green elegant blouse","Green elegant legs","Green elegant skirt","Blue elegant shirt","Blue elegant blouse","Blue elegant legs","Blue elegant skirt","Amulet of power (t)","Ham joint","Rain bow"]
apply (VAR_JUNK_HIDE_UNIQUE_CLUE_EASY && name:CONST_JUNK_UNIQUE_CLUE_EASY) { hidden = true; }
/*@ define:input
type: boolean
group: 'Clue Uniques'
label: 'Hide Medium Uniques'
*/
#define VAR_JUNK_HIDE_UNIQUE_CLUE_MEDIUM false

#define CONST_JUNK_UNIQUE_CLUE_MEDIUM ["Holy sandals","Spiked manacles","Climbing boots (g)","Adamant full helm (t)","Adamant platebody (t)","Adamant platelegs (t)","Adamant plateskirt (t)","Adamant kiteshield (t)","Adamant full helm (g)","Adamant platebody (g)","Adamant platelegs (g)","Adamant plateskirt (g)","Adamant kiteshield (g)","Adamant shield (h1)","Adamant shield (h2)","Adamant shield (h3)","Adamant shield (h4)","Adamant shield (h5)","Adamant helm (h1)","Adamant helm (h2)","Adamant helm (h3)","Adamant helm (h4)","Adamant helm (h5)","Adamant platebody (h1)","Adamant platebody (h2)","Adamant platebody (h3)","Adamant platebody (h4)","Adamant platebody (h5)","Mithril full helm (g)","Mithril platebody (g)","Mithril platelegs (g)","Mithril plateskirt (g)","Mithril kiteshield (g)","Mithril full helm (t)","Mithril platebody (t)","Mithril platelegs (t)","Mithril plateskirt (t)","Mithril kiteshield (t)","Green d'hide body (g)","Green d'hide body (t)","Green d'hide chaps (g)","Green d'hide chaps (t)","Saradomin mitre","Saradomin cloak","Guthix mitre","Guthix cloak","Zamorak mitre","Zamorak cloak","Ancient mitre","Ancient cloak","Ancient stole","Ancient crozier","Armadyl mitre","Armadyl cloak","Armadyl stole","Armadyl crozier","Bandos mitre","Bandos cloak","Bandos stole","Bandos crozier","Red boater","Green boater","Orange boater","Black boater","Blue boater","Pink boater","Purple boater","White boater","Red headband","Black headband","Brown headband","White headband","Blue headband","Gold headband","Pink headband","Green headband","Crier hat","Crier coat","Crier bell","Adamant cane","Arceuus banner","Piscarilius banner","Hosidius banner","Shayzien banner","Lovakengj banner","Cabbage round shield","Black unicorn mask","White unicorn mask","Cat mask","Penguin mask","Leprechaun hat","Black leprechaun hat","Wolf mask","Wolf cloak","Purple elegant shirt","Purple elegant blouse","Purple elegant legs","Purple elegant skirt","Black elegant shirt","White elegant blouse","Black elegant legs","White elegant skirt","Pink elegant shirt","Pink elegant blouse","Pink elegant legs","Pink elegant skirt","Gold elegant shirt","Gold elegant blouse","Gold elegant legs","Gold elegant skirt"]
apply (VAR_JUNK_HIDE_UNIQUE_CLUE_MEDIUM && name:CONST_JUNK_UNIQUE_CLUE_MEDIUM) { hidden = true; }
/*@ define:input
type: boolean
group: 'Clue Uniques'
label: 'Hide Hard Uniques'
*/
#define VAR_JUNK_HIDE_UNIQUE_CLUE_HARD false

#define CONST_JUNK_UNIQUE_CLUE_HARD ["Amulet of glory (t4)","Robin hood hat","Enchanted hat","Enchanted top","Enchanted robe","Dragon boots ornament kit","Rune full helm (t)","Rune platebody (t)","Rune platelegs (t)","Rune plateskirt (t)","Rune kiteshield (t)","Rune full helm (g)","Rune platebody (g)","Rune platelegs (g)","Rune plateskirt (g)","Rune kiteshield (g)","Rune shield (h1)","Rune shield (h2)","Rune shield (h3)","Rune shield (h4)","Rune shield (h5)","Rune helm (h1)","Rune helm (h2)","Rune helm (h3)","Rune helm (h4)","Rune helm (h5)","Rune platebody (h1)","Rune platebody (h2)","Rune platebody (h3)","Rune platebody (h4)","Rune platebody (h5)","Zamorak full helm","Zamorak platebody","Zamorak platelegs","Zamorak plateskirt","Zamorak kiteshield","Guthix full helm","Guthix platebody","Guthix platelegs","Guthix plateskirt","Guthix kiteshield","Saradomin full helm","Saradomin platebody","Saradomin platelegs","Saradomin plateskirt","Saradomin kiteshield","Ancient full helm","Ancient platebody","Ancient platelegs","Ancient plateskirt","Ancient kiteshield","Armadyl full helm","Armadyl platebody","Armadyl platelegs","Armadyl plateskirt","Armadyl kiteshield","Bandos full helm","Bandos platebody","Bandos platelegs","Bandos plateskirt","Bandos kiteshield","Red d'hide body (g)","Red d'hide body (t)","Red d'hide chaps (g)","Red d'hide chaps (t)","Blue d'hide body (g)","Blue d'hide body (t)","Blue d'hide chaps (g)","Blue d'hide chaps (t)","Saradomin coif","Saradomin d'hide body","Saradomin chaps","Saradomin bracers","Saradomin d'hide shield","Guthix coif","Guthix d'hide body","Guthix chaps","Guthix bracers","Guthix d'hide shield","Zamorak coif","Zamorak d'hide body","Zamorak chaps","Zamorak bracers","Zamorak d'hide shield","Bandos coif","Bandos d'hide body","Bandos chaps","Bandos bracers","Bandos d'hide shield","Armadyl coif","Armadyl d'hide body","Armadyl chaps","Armadyl bracers","Armadyl d'hide shield","Ancient coif","Ancient d'hide body","Ancient chaps","Ancient bracers","Ancient d'hide shield","Saradomin stole","Saradomin crozier","Guthix stole","Guthix crozier","Zamorak stole","Zamorak crozier","Zombie head (Treasure Trails)","Cyclops head","Pirate's hat","Red cavalier","White cavalier","Navy cavalier","Tan cavalier","Dark cavalier","Black cavalier","Pith helmet","Explorer backpack","Green dragon mask","Blue dragon mask","Red dragon mask","Black dragon mask","Nunchaku","Rune cane","Dual sai","Thieving bag","Rune defender ornament kit","Berserker necklace ornament kit","Tzhaar-ket-om ornament kit"]
apply (VAR_JUNK_HIDE_UNIQUE_CLUE_HARD && name:CONST_JUNK_UNIQUE_CLUE_HARD) { hidden = true; }
/*@ define:input
type: boolean
group: 'Clue Uniques'
label: 'Hide Elite Uniques'
*/
#define VAR_JUNK_HIDE_UNIQUE_CLUE_ELITE false

#define CONST_JUNK_UNIQUE_CLUE_ELITE ["Dragon full helm ornament kit","Dragon chainbody ornament kit","Dragon legs/skirt ornament kit","Dragon sq shield ornament kit","Dragon scimitar ornament kit","Fury ornament kit","Light infinity colour kit","Dark infinity colour kit","Royal crown","Royal gown top","Royal gown bottom","Royal sceptre","Musketeer hat","Musketeer tabard","Musketeer pants","Black d'hide body (g)","Black d'hide body (t)","Black d'hide chaps (g)","Black d'hide chaps (t)","Rangers' tunic","Ranger gloves","Holy wraps","Bronze dragon mask","Iron dragon mask","Steel dragon mask","Mithril dragon mask","Adamant dragon mask","Rune dragon mask","Arceuus scarf","Hosidius scarf","Lovakengj scarf","Piscarilius scarf","Shayzien scarf","Katana","Dragon cane","Bucket helm","Blacksmith's helm","Deerstalker","Afro","Big pirate hat","Top hat","Monocle","Briefcase","Sagacious spectacles","Dark bow tie","Dark tuxedo jacket","Dark tuxedo cuffs","Dark trousers","Dark tuxedo shoes","Light bow tie","Light tuxedo jacket","Light tuxedo cuffs","Light trousers","Light tuxedo shoes","Rangers' tights","Uri's hat","Giant boot","Fremennik kilt"]
apply (VAR_JUNK_HIDE_UNIQUE_CLUE_ELITE && name:CONST_JUNK_UNIQUE_CLUE_ELITE) { hidden = true; }
/*@ define:input
type: boolean
group: 'Clue Uniques'
label: 'Hide Master Uniques'
*/
#define VAR_JUNK_HIDE_UNIQUE_CLUE_MASTER false

#define CONST_JUNK_UNIQUE_CLUE_MASTER ["Occult ornament kit","Torture ornament kit","Anguish ornament kit","Tormented ornament kit","Dragon defender ornament kit","Dragon kiteshield ornament kit","Dragon platebody ornament kit","Hood of darkness","Robe top of darkness","Gloves of darkness","Robe bottom of darkness","Boots of darkness","Samurai kasa","Samurai shirt","Samurai gloves","Samurai greaves","Arceuus hood","Hosidius hood","Lovakengj hood","Piscarilius hood","Shayzien hood","Old demon mask","Lesser demon mask","Greater demon mask","Black demon mask","Jungle demon mask","Left eye patch","Bowl wig","Ale of the gods","Obsidian cape (r)","Fancy tiara","Half moon spectacles","Armadyl godsword ornament kit","Bandos godsword ornament kit","Saradomin godsword ornament kit","Zamorak godsword ornament kit","Ankou mask","Ankou top","Ankou gloves","Ankou's leggings","Ankou socks","Mummy's head","Mummy's body","Mummy's hands","Mummy's legs","Mummy's feet"]
apply (VAR_JUNK_HIDE_UNIQUE_CLUE_MASTER && name:CONST_JUNK_UNIQUE_CLUE_MASTER) { hidden = true; }

/*@ define:input
type: stringlist
group: Misc
label: Miscellaneous items you would like to hide.
*/
#define VAR_HIDES_HIDEBYDEFAULT ["Vial","Bucket","Jug","Beer glass","Vial of water","Bucket of water","Jug of water","Bones","Ashes","Seaweed","Broken arrow"]
apply (name:VAR_HIDES_HIDEBYDEFAULT) { hidden = true; }

/*@ define:module:basic
name: 'PvM: Basic'
description: |
  Provides per-monster filtering for common monsters.
*/

// ==== Adamant Dragon Drops ====

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Adamant Dragon
enum: ["Adamantite bar", "Dragon bones"]
*/
#define VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_100 []
CONST_ADAMANT_DRAGON_RULE (name:VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Adamant Dragon
enum: ["Adamant platebody", "Dragon med helm", "Dragon platelegs", "Dragon plateskirt", "Rune mace", "Rune scimitar"]
*/
#define VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ADAMANT_DRAGON_RULE (name:VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Adamant Dragon
enum: ["Adamant arrow", "Chaos rune", "Death rune", "Wrath rune"]
*/
#define VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ADAMANT_DRAGON_RULE (name:VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Adamant Dragon
enum: ["Adamant bolts(unf)", "Adamant javelin heads", "Adamantite bar", "Adamantite ore", "Diamond", "Dragon bolts (unf)", "Dragon javelin heads"]
*/
#define VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_MATERIALS []
CONST_ADAMANT_DRAGON_RULE (name:VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Adamant Dragon
enum: ["Wrath talisman"]
*/
#define VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_ADAMANT_DRAGON_RULE (name:VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Adamant Dragon
enum: ["Brimstone key", "Draconic visage", "Dragon limbs", "Dragon metal slice"]
*/
#define VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_ADAMANT_DRAGON_RULE (name:VAR_ADAMANT_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Ankou Drops ====

#define CONST_AREA_ANKOU0 [2957,3739,0,2996,3769,0] // [[The Forgotten Cemetery]]
#define CONST_AREA_ANKOU1 [2310,5192,0,2338,5239,0] // [[Stronghold of Security: Sepulchre of Death1]]
#define CONST_AREA_ANKOU2 [2352,5235,0,2367,5247,0] // [[Stronghold of Security: Sepulchre of Death2]]
#define CONST_AREA_ANKOU3 [2466,9795,0,2487,9812,0] // [[Stronghold Slayer Cave]]
#define CONST_AREA_ANKOU4 [3339,10060,0,3381,10093,0] // [[Wilderness Slayer Cave]]
#define CONST_AREA_ANKOU5 [1631,9988,0,1653,10001,0] // [[Catacombs of Kourend]]
#define CONST_ANKOU_RULE(_cond) rule ((area:CONST_AREA_ANKOU0 || area:CONST_AREA_ANKOU1 || area:CONST_AREA_ANKOU2 || area:CONST_AREA_ANKOU3 || area:CONST_AREA_ANKOU4 || area:CONST_AREA_ANKOU5) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Ankou
enum: ["Bones"]
*/
#define VAR_ANKOU_ENUMLIST_FILTER_100 []
CONST_ANKOU_RULE (name:VAR_ANKOU_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Ankou
enum: ["Adamant platelegs", "Black knife", "Black robe"]
*/
#define VAR_ANKOU_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ANKOU_RULE (name:VAR_ANKOU_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Ankou
enum: ["Adamant arrow", "Blood rune", "Death rune", "Law rune", "Rune arrow"]
*/
#define VAR_ANKOU_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ANKOU_RULE (name:VAR_ANKOU_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Ankou
enum: ["Mithril ore", "Pure essence", "Rune essence"]
*/
#define VAR_ANKOU_ENUMLIST_FILTER_MATERIALS []
CONST_ANKOU_RULE (name:VAR_ANKOU_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Ankou
enum: ["Bass", "Coins", "Dark fishing bait", "Fishing bait", "Fried mushrooms", "Left skull half", "Mithril ore", "Weapon poison"]
*/
#define VAR_ANKOU_ENUMLIST_FILTER_OTHER []
CONST_ANKOU_RULE (name:VAR_ANKOU_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Ankou
enum: ["Brimstone key", "Clue scroll (elite)", "Looting bag", "Reward casket (elite)"]
*/
#define VAR_ANKOU_ENUMLIST_FILTER_TERTIARY []
CONST_ANKOU_RULE (name:VAR_ANKOU_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Aviansie Drops ====

#define CONST_AREA_AVIANSIE0 [2833,5250,0,2878,5315,0] // [[God Wars Dungeon]]
#define CONST_AREA_AVIANSIE1 [3015,10143,0,3037,10167,0] // [[Wilderness God Wars Dungeon]]
#define CONST_AVIANSIE_RULE(_cond) rule ((area:CONST_AREA_AVIANSIE0 || area:CONST_AREA_AVIANSIE1) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Aviansie
enum: ["Bones", "Feather"]
*/
#define VAR_AVIANSIE_ENUMLIST_FILTER_100 []
CONST_AVIANSIE_RULE (name:VAR_AVIANSIE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Aviansie
enum: ["Rune dagger(p+)"]
*/
#define VAR_AVIANSIE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_AVIANSIE_RULE (name:VAR_AVIANSIE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Aviansie
enum: ["Air rune", "Blood rune", "Body rune", "Chaos rune", "Law rune", "Mind rune", "Nature rune", "Water rune"]
*/
#define VAR_AVIANSIE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_AVIANSIE_RULE (name:VAR_AVIANSIE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Aviansie
enum: ["Adamantite bar", "Runite limbs", "Silver ore"]
*/
#define VAR_AVIANSIE_ENUMLIST_FILTER_MATERIALS []
CONST_AVIANSIE_RULE (name:VAR_AVIANSIE_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Aviansie
enum: ["Antipoison(3)", "Swordfish"]
*/
#define VAR_AVIANSIE_ENUMLIST_FILTER_OTHER []
CONST_AVIANSIE_RULE (name:VAR_AVIANSIE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Aviansie
enum: ["Brimstone key", "Ensouled aviansie head"]
*/
#define VAR_AVIANSIE_ENUMLIST_FILTER_TERTIARY []
CONST_AVIANSIE_RULE (name:VAR_AVIANSIE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Bandit Drops ====

#define CONST_AREA_BANDIT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BANDIT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BANDIT_RULE(_cond) rule ((area:CONST_AREA_BANDIT0 ||   area:CONST_AREA_BANDIT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Bandit
enum: ["Bones"]
*/
#define VAR_BANDIT_ENUMLIST_FILTER_100 []
CONST_BANDIT_RULE (name:VAR_BANDIT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Bandit
enum: ["Adamant scimitar", "Dragon longsword", "Iron scimitar", "Mithril axe", "Mithril sq shield", "Rune full helm", "Rune med helm", "Rune scimitar", "Steel axe", "Steel sq shield"]
*/
#define VAR_BANDIT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BANDIT_RULE (name:VAR_BANDIT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Bandit
enum: ["Air rune", "Blood rune", "Chaos rune", "Death rune", "Law rune", "Mind rune", "Nature rune", "Water rune"]
*/
#define VAR_BANDIT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BANDIT_RULE (name:VAR_BANDIT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Bandit
enum: ["Coal", "Dark fishing bait"]
*/
#define VAR_BANDIT_ENUMLIST_FILTER_OTHER []
CONST_BANDIT_RULE (name:VAR_BANDIT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Bandit
enum: ["Looting bag"]
*/
#define VAR_BANDIT_ENUMLIST_FILTER_TERTIARY []
CONST_BANDIT_RULE (name:VAR_BANDIT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Black Demon Drops ====

#define CONST_AREA_BLACK_DEMON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BLACK_DEMON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BLACK_DEMON_RULE(_cond) rule ((area:CONST_AREA_BLACK_DEMON0 ||   area:CONST_AREA_BLACK_DEMON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Black Demon
enum: ["Malicious ashes"]
*/
#define VAR_BLACK_DEMON_ENUMLIST_FILTER_100 []
CONST_BLACK_DEMON_RULE (name:VAR_BLACK_DEMON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Black Demon
enum: ["Adamant battleaxe", "Adamant dagger", "Adamant platebody", "Black axe", "Black sword", "Mithril kiteshield", "Rune chainbody", "Rune dagger", "Rune full helm", "Rune med helm", "Rune sword", "Steel battleaxe"]
*/
#define VAR_BLACK_DEMON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BLACK_DEMON_RULE (name:VAR_BLACK_DEMON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Black Demon
enum: ["Air rune", "Blood rune", "Chaos rune", "Death rune", "Fire rune", "Law rune"]
*/
#define VAR_BLACK_DEMON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BLACK_DEMON_RULE (name:VAR_BLACK_DEMON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Black Demon
enum: ["Adamantite bar", "Adamantite ore"]
*/
#define VAR_BLACK_DEMON_ENUMLIST_FILTER_MATERIALS []
CONST_BLACK_DEMON_RULE (name:VAR_BLACK_DEMON_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Black Demon
enum: ["Defence potion(3)", "Lobster"]
*/
#define VAR_BLACK_DEMON_ENUMLIST_FILTER_OTHER []
CONST_BLACK_DEMON_RULE (name:VAR_BLACK_DEMON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Black Demon
enum: ["Brimstone key", "Ensouled demon head", "Looting bag"]
*/
#define VAR_BLACK_DEMON_ENUMLIST_FILTER_TERTIARY []
CONST_BLACK_DEMON_RULE (name:VAR_BLACK_DEMON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Black Dragon Drops ====

#define CONST_AREA_BLACK_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BLACK_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BLACK_DRAGON_RULE(_cond) rule ((area:CONST_AREA_BLACK_DRAGON0 ||   area:CONST_AREA_BLACK_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Black Dragon
enum: ["Black dragonhide", "Dragon bones"]
*/
#define VAR_BLACK_DRAGON_ENUMLIST_FILTER_100 []
CONST_BLACK_DRAGON_RULE (name:VAR_BLACK_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Black Dragon
enum: ["Adamant 2h sword", "Adamant battleaxe", "Adamant platebody", "Mithril 2h sword", "Mithril axe", "Mithril battleaxe", "Mithril kiteshield", "Rune axe", "Rune kiteshield", "Rune knife", "Rune longsword", "Rune med helm"]
*/
#define VAR_BLACK_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BLACK_DRAGON_RULE (name:VAR_BLACK_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Black Dragon
enum: ["Adamant dart(p)", "Adamant javelin", "Air rune", "Blood rune", "Chaos rune", "Death rune", "Fire rune", "Law rune"]
*/
#define VAR_BLACK_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BLACK_DRAGON_RULE (name:VAR_BLACK_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Black Dragon
enum: ["Adamantite bar", "Chocolate cake", "Dragon javelin heads", "Monkfish"]
*/
#define VAR_BLACK_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_BLACK_DRAGON_RULE (name:VAR_BLACK_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Black Dragon
enum: ["Brimstone key", "Draconic visage", "Ensouled dragon head", "Looting bag"]
*/
#define VAR_BLACK_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_BLACK_DRAGON_RULE (name:VAR_BLACK_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Black Knight Drops ====

#define CONST_AREA_BLACK_KNIGHT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BLACK_KNIGHT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BLACK_KNIGHT_RULE(_cond) rule ((area:CONST_AREA_BLACK_KNIGHT0 ||   area:CONST_AREA_BLACK_KNIGHT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Black Knight
enum: ["Bones"]
*/
#define VAR_BLACK_KNIGHT_ENUMLIST_FILTER_100 []
CONST_BLACK_KNIGHT_RULE (name:VAR_BLACK_KNIGHT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Black Knight
enum: ["Iron full helm", "Iron sword", "Steel mace"]
*/
#define VAR_BLACK_KNIGHT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BLACK_KNIGHT_RULE (name:VAR_BLACK_KNIGHT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Black Knight
enum: ["Body rune", "Chaos rune", "Cosmic rune", "Death rune", "Earth rune", "Law rune", "Mind rune", "Mithril arrow"]
*/
#define VAR_BLACK_KNIGHT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BLACK_KNIGHT_RULE (name:VAR_BLACK_KNIGHT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Black Knight
enum: ["Pot of flour", "Steel bar", "Tin ore"]
*/
#define VAR_BLACK_KNIGHT_ENUMLIST_FILTER_MATERIALS []
CONST_BLACK_KNIGHT_RULE (name:VAR_BLACK_KNIGHT_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Black Knight
enum: ["Bread"]
*/
#define VAR_BLACK_KNIGHT_ENUMLIST_FILTER_OTHER []
CONST_BLACK_KNIGHT_RULE (name:VAR_BLACK_KNIGHT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Black Knight
enum: ["Looting bag"]
*/
#define VAR_BLACK_KNIGHT_ENUMLIST_FILTER_TERTIARY []
CONST_BLACK_KNIGHT_RULE (name:VAR_BLACK_KNIGHT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Blue Dragon Drops ====

#define CONST_AREA_BLUE_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BLUE_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BLUE_DRAGON_RULE(_cond) rule ((area:CONST_AREA_BLUE_DRAGON0 ||   area:CONST_AREA_BLUE_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Blue Dragon
enum: ["Blue dragonhide", "Dragon bones"]
*/
#define VAR_BLUE_DRAGON_ENUMLIST_FILTER_100 []
CONST_BLUE_DRAGON_RULE (name:VAR_BLUE_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Blue Dragon
enum: ["Adamant full helm", "Mithril axe", "Mithril kiteshield", "Mithril spear", "Rune dagger", "Steel battleaxe", "Steel platelegs"]
*/
#define VAR_BLUE_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BLUE_DRAGON_RULE (name:VAR_BLUE_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Blue Dragon
enum: ["Fire rune", "Law rune", "Nature rune", "Water rune"]
*/
#define VAR_BLUE_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BLUE_DRAGON_RULE (name:VAR_BLUE_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Blue Dragon
enum: ["Adamantite ore", "Bass"]
*/
#define VAR_BLUE_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_BLUE_DRAGON_RULE (name:VAR_BLUE_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Blue Dragon
enum: ["Brimstone key", "Ensouled dragon head", "Frozen tear", "Scaly blue dragonhide", "Tooth half of key (moon key)"]
*/
#define VAR_BLUE_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_BLUE_DRAGON_RULE (name:VAR_BLUE_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Bronze Dragon Drops ====

#define CONST_AREA_BRONZE_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BRONZE_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BRONZE_DRAGON_RULE(_cond) rule ((area:CONST_AREA_BRONZE_DRAGON0 ||   area:CONST_AREA_BRONZE_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Bronze Dragon
enum: ["Bronze bar", "Dragon bones"]
*/
#define VAR_BRONZE_DRAGON_ENUMLIST_FILTER_100 []
CONST_BRONZE_DRAGON_RULE (name:VAR_BRONZE_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Bronze Dragon
enum: ["Adamant dart(p)", "Adamant platebody", "Mithril 2h sword", "Mithril axe", "Mithril battleaxe", "Mithril kiteshield", "Rune knife", "Rune longsword"]
*/
#define VAR_BRONZE_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BRONZE_DRAGON_RULE (name:VAR_BRONZE_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Bronze Dragon
enum: ["Adamant javelin", "Blood rune", "Death rune", "Fire rune", "Law rune", "Mithril bolts"]
*/
#define VAR_BRONZE_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BRONZE_DRAGON_RULE (name:VAR_BRONZE_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Bronze Dragon
enum: ["Adamantite bar", "Swordfish"]
*/
#define VAR_BRONZE_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_BRONZE_DRAGON_RULE (name:VAR_BRONZE_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Bronze Dragon
enum: ["Brimstone key"]
*/
#define VAR_BRONZE_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_BRONZE_DRAGON_RULE (name:VAR_BRONZE_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Catablepon Drops ====

#define CONST_AREA_CATABLEPON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_CATABLEPON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_CATABLEPON_RULE(_cond) rule ((area:CONST_AREA_CATABLEPON0 ||   area:CONST_AREA_CATABLEPON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Catablepon
enum: ["Bones"]
*/
#define VAR_CATABLEPON_ENUMLIST_FILTER_100 []
CONST_CATABLEPON_RULE (name:VAR_CATABLEPON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Catablepon
enum: ["Adamant med helm"]
*/
#define VAR_CATABLEPON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_CATABLEPON_RULE (name:VAR_CATABLEPON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Catablepon
enum: ["Chaos rune", "Cosmic rune", "Fire rune", "Law rune", "Mithril arrow", "Water rune"]
*/
#define VAR_CATABLEPON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_CATABLEPON_RULE (name:VAR_CATABLEPON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Catablepon
enum: ["Coal", "Eye of newt", "Pure essence", "Rune essence"]
*/
#define VAR_CATABLEPON_ENUMLIST_FILTER_MATERIALS []
CONST_CATABLEPON_RULE (name:VAR_CATABLEPON_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Catablepon
enum: ["Top of sceptre", "Trout", "Unlit torch"]
*/
#define VAR_CATABLEPON_ENUMLIST_FILTER_OTHER []
CONST_CATABLEPON_RULE (name:VAR_CATABLEPON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Chaos Druid Drops ====

#define CONST_AREA_CHAOS_DRUID0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_CHAOS_DRUID1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_CHAOS_DRUID_RULE(_cond) rule ((area:CONST_AREA_CHAOS_DRUID0 ||   area:CONST_AREA_CHAOS_DRUID1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Chaos Druid
enum: ["Bones"]
*/
#define VAR_CHAOS_DRUID_ENUMLIST_FILTER_100 []
CONST_CHAOS_DRUID_RULE (name:VAR_CHAOS_DRUID_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Chaos Druid
enum: ["Air rune", "Body rune", "Earth rune", "Law rune", "Mind rune", "Mithril bolts", "Nature rune"]
*/
#define VAR_CHAOS_DRUID_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_CHAOS_DRUID_RULE (name:VAR_CHAOS_DRUID_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Chaos Druid
enum: ["Bronze longsword", "Snape grass", "Unholy mould", "Vial of water"]
*/
#define VAR_CHAOS_DRUID_ENUMLIST_FILTER_OTHER []
CONST_CHAOS_DRUID_RULE (name:VAR_CHAOS_DRUID_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Chaos Druid
enum: ["Ensouled chaos druid head", "Looting bag"]
*/
#define VAR_CHAOS_DRUID_ENUMLIST_FILTER_TERTIARY []
CONST_CHAOS_DRUID_RULE (name:VAR_CHAOS_DRUID_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Cow Drops ====

#define CONST_AREA_COW0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_COW1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_COW_RULE(_cond) rule ((area:CONST_AREA_COW0 ||   area:CONST_AREA_COW1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Cow
enum: ["Bones", "Cowhide", "Raw beef"]
*/
#define VAR_COW_ENUMLIST_FILTER_100 []
CONST_COW_RULE (name:VAR_COW_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Cow
enum: ["Clue scroll (beginner)"]
*/
#define VAR_COW_ENUMLIST_FILTER_TERTIARY []
CONST_COW_RULE (name:VAR_COW_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Crocodile Drops ====

#define CONST_AREA_CROCODILE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_CROCODILE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_CROCODILE_RULE(_cond) rule ((area:CONST_AREA_CROCODILE0 ||   area:CONST_AREA_CROCODILE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Crocodile
enum: ["Bones"]
*/
#define VAR_CROCODILE_ENUMLIST_FILTER_100 []
CONST_CROCODILE_RULE (name:VAR_CROCODILE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Crocodile
enum: ["Clue scroll (elite)", "Reward casket (elite)"]
*/
#define VAR_CROCODILE_ENUMLIST_FILTER_TERTIARY []
CONST_CROCODILE_RULE (name:VAR_CROCODILE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Dagannoth Drops ====

#define CONST_AREA_DAGANNOTH0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_DAGANNOTH1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_DAGANNOTH_RULE(_cond) rule ((area:CONST_AREA_DAGANNOTH0 ||   area:CONST_AREA_DAGANNOTH1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Dagannoth
enum: ["Bones"]
*/
#define VAR_DAGANNOTH_ENUMLIST_FILTER_100 []
CONST_DAGANNOTH_RULE (name:VAR_DAGANNOTH_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Dagannoth
enum: ["Bronze spear", "Iron spear", "Mithril spear"]
*/
#define VAR_DAGANNOTH_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_DAGANNOTH_RULE (name:VAR_DAGANNOTH_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Dagannoth
enum: ["Mithril javelin", "Steel arrow", "Water rune"]
*/
#define VAR_DAGANNOTH_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_DAGANNOTH_RULE (name:VAR_DAGANNOTH_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Dagannoth
enum: ["Casket", "Opal bolt tips"]
*/
#define VAR_DAGANNOTH_ENUMLIST_FILTER_OTHER []
CONST_DAGANNOTH_RULE (name:VAR_DAGANNOTH_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Dagannoth
enum: ["Brimstone key", "Dagannoth ribs", "Ensouled dagannoth head"]
*/
#define VAR_DAGANNOTH_ENUMLIST_FILTER_TERTIARY []
CONST_DAGANNOTH_RULE (name:VAR_DAGANNOTH_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Dark Warrior Drops ====

#define CONST_AREA_DARK_WARRIOR0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_DARK_WARRIOR1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_DARK_WARRIOR_RULE(_cond) rule ((area:CONST_AREA_DARK_WARRIOR0 ||   area:CONST_AREA_DARK_WARRIOR1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Dark Warrior
enum: ["Bones"]
*/
#define VAR_DARK_WARRIOR_ENUMLIST_FILTER_100 []
CONST_DARK_WARRIOR_RULE (name:VAR_DARK_WARRIOR_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Dark Warrior
enum: ["Adamant med helm", "Black mace", "Black med helm", "Bronze med helm", "Iron mace", "Mithril mace", "Steel mace", "Steel med helm"]
*/
#define VAR_DARK_WARRIOR_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_DARK_WARRIOR_RULE (name:VAR_DARK_WARRIOR_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Dark Warrior
enum: ["Bronze arrow", "Chaos rune", "Earth rune", "Mind rune", "Nature rune", "Water rune"]
*/
#define VAR_DARK_WARRIOR_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_DARK_WARRIOR_RULE (name:VAR_DARK_WARRIOR_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Dark Warrior
enum: ["Dark fishing bait", "Iron ore", "Sardine"]
*/
#define VAR_DARK_WARRIOR_ENUMLIST_FILTER_OTHER []
CONST_DARK_WARRIOR_RULE (name:VAR_DARK_WARRIOR_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Dark Warrior
enum: ["Looting bag"]
*/
#define VAR_DARK_WARRIOR_ENUMLIST_FILTER_TERTIARY []
CONST_DARK_WARRIOR_RULE (name:VAR_DARK_WARRIOR_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Dwarf Drops ====

#define CONST_AREA_DWARF0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_DWARF1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_DWARF_RULE(_cond) rule ((area:CONST_AREA_DWARF0 ||   area:CONST_AREA_DWARF1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Dwarf
enum: ["Bones"]
*/
#define VAR_DWARF_ENUMLIST_FILTER_100 []
CONST_DWARF_RULE (name:VAR_DWARF_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Dwarf
enum: ["Bronze battleaxe", "Bronze med helm", "Bronze pickaxe", "Iron battleaxe"]
*/
#define VAR_DWARF_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_DWARF_RULE (name:VAR_DWARF_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Dwarf
enum: ["Bronze bolts", "Chaos rune", "Nature rune"]
*/
#define VAR_DWARF_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_DWARF_RULE (name:VAR_DWARF_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Dwarf
enum: ["Bronze bar", "Coal", "Copper ore", "Hammer", "Iron bar", "Iron ore", "Tin ore"]
*/
#define VAR_DWARF_ENUMLIST_FILTER_OTHER []
CONST_DWARF_RULE (name:VAR_DWARF_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Dwarf
enum: ["Clue scroll (beginner)"]
*/
#define VAR_DWARF_ENUMLIST_FILTER_TERTIARY []
CONST_DWARF_RULE (name:VAR_DWARF_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Fire Giant Drops ====

#define CONST_AREA_FIRE_GIANT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_FIRE_GIANT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_FIRE_GIANT_RULE(_cond) rule ((area:CONST_AREA_FIRE_GIANT0 ||   area:CONST_AREA_FIRE_GIANT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Fire Giant
enum: ["Big bones"]
*/
#define VAR_FIRE_GIANT_ENUMLIST_FILTER_100 []
CONST_FIRE_GIANT_RULE (name:VAR_FIRE_GIANT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Fire Giant
enum: ["Fire battlestaff", "Mithril sq shield", "Rune scimitar", "Steel axe"]
*/
#define VAR_FIRE_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_FIRE_GIANT_RULE (name:VAR_FIRE_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Fire Giant
enum: ["Blood rune", "Chaos rune", "Fire rune", "Law rune", "Rune arrow"]
*/
#define VAR_FIRE_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_FIRE_GIANT_RULE (name:VAR_FIRE_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Fire Giant
enum: ["Lobster", "Steel bar", "Strength potion(2)"]
*/
#define VAR_FIRE_GIANT_ENUMLIST_FILTER_OTHER []
CONST_FIRE_GIANT_RULE (name:VAR_FIRE_GIANT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Fire Giant
enum: ["Brimstone key", "Curved bone", "Ensouled giant head", "Fire giant bone", "Giant champion scroll", "Long bone", "Looting bag"]
*/
#define VAR_FIRE_GIANT_ENUMLIST_FILTER_TERTIARY []
CONST_FIRE_GIANT_RULE (name:VAR_FIRE_GIANT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Flesh Crawler Drops ====

#define CONST_AREA_FLESH_CRAWLER0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_FLESH_CRAWLER1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_FLESH_CRAWLER_RULE(_cond) rule ((area:CONST_AREA_FLESH_CRAWLER0 ||   area:CONST_AREA_FLESH_CRAWLER1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Flesh Crawler
enum: ["Body rune", "Dust rune", "Fire rune", "Nature rune"]
*/
#define VAR_FLESH_CRAWLER_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_FLESH_CRAWLER_RULE (name:VAR_FLESH_CRAWLER_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Flesh Crawler
enum: ["Iron ore", "Silver bar"]
*/
#define VAR_FLESH_CRAWLER_ENUMLIST_FILTER_MATERIALS []
CONST_FLESH_CRAWLER_RULE (name:VAR_FLESH_CRAWLER_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Flesh Crawler
enum: ["Ashes", "Bottom of sceptre", "Coins"]
*/
#define VAR_FLESH_CRAWLER_ENUMLIST_FILTER_OTHER []
CONST_FLESH_CRAWLER_RULE (name:VAR_FLESH_CRAWLER_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Ghoul Drops ====

#define CONST_AREA_GHOUL0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_GHOUL1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_GHOUL_RULE(_cond) rule ((area:CONST_AREA_GHOUL0 ||   area:CONST_AREA_GHOUL1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Ghoul
enum: ["Bones"]
*/
#define VAR_GHOUL_ENUMLIST_FILTER_100 []
CONST_GHOUL_RULE (name:VAR_GHOUL_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Ghoul
enum: ["Ghoul bone", "Ghoul champion scroll"]
*/
#define VAR_GHOUL_ENUMLIST_FILTER_TERTIARY []
CONST_GHOUL_RULE (name:VAR_GHOUL_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Goblin Drops ====

#define CONST_AREA_GOBLIN0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_GOBLIN1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_GOBLIN_RULE(_cond) rule ((area:CONST_AREA_GOBLIN0 ||   area:CONST_AREA_GOBLIN1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Goblin
enum: ["Bones"]
*/
#define VAR_GOBLIN_ENUMLIST_FILTER_100 []
CONST_GOBLIN_RULE (name:VAR_GOBLIN_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Goblin
enum: ["Bronze axe", "Bronze scimitar", "Bronze spear", "Bronze sq shield"]
*/
#define VAR_GOBLIN_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_GOBLIN_RULE (name:VAR_GOBLIN_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Goblin
enum: ["Body rune", "Bronze arrow", "Bronze bolts", "Bronze javelin", "Chaos rune", "Earth rune", "Mind rune", "Nature rune", "Water rune"]
*/
#define VAR_GOBLIN_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_GOBLIN_RULE (name:VAR_GOBLIN_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Goblin
enum: ["Air talisman", "Beer", "Brass necklace", "Chef's hat", "Goblin book", "Goblin mail", "Grapes", "Hammer", "Red cape", "Tin ore"]
*/
#define VAR_GOBLIN_ENUMLIST_FILTER_OTHER []
CONST_GOBLIN_RULE (name:VAR_GOBLIN_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Goblin
enum: ["Clue scroll (beginner)", "Ensouled goblin head", "Goblin champion scroll", "Goblin skull"]
*/
#define VAR_GOBLIN_ENUMLIST_FILTER_TERTIARY []
CONST_GOBLIN_RULE (name:VAR_GOBLIN_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Greater Demon Drops ====

#define CONST_AREA_GREATER_DEMON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_GREATER_DEMON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_GREATER_DEMON_RULE(_cond) rule ((area:CONST_AREA_GREATER_DEMON0 ||   area:CONST_AREA_GREATER_DEMON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Greater Demon
enum: ["Vile ashes"]
*/
#define VAR_GREATER_DEMON_ENUMLIST_FILTER_100 []
CONST_GREATER_DEMON_RULE (name:VAR_GREATER_DEMON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Greater Demon
enum: ["Adamant 2h sword", "Adamant axe", "Adamant battleaxe", "Adamant kiteshield", "Adamant platelegs", "Mithril kiteshield", "Rune full helm", "Steel 2h sword", "Steel axe", "Steel battleaxe"]
*/
#define VAR_GREATER_DEMON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_GREATER_DEMON_RULE (name:VAR_GREATER_DEMON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Greater Demon
enum: ["Blood rune", "Chaos rune", "Death rune", "Fire rune"]
*/
#define VAR_GREATER_DEMON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_GREATER_DEMON_RULE (name:VAR_GREATER_DEMON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Greater Demon
enum: ["Gold bar", "Gold ore", "Thread", "Tuna"]
*/
#define VAR_GREATER_DEMON_ENUMLIST_FILTER_OTHER []
CONST_GREATER_DEMON_RULE (name:VAR_GREATER_DEMON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Greater Demon
enum: ["Brimstone key", "Ensouled demon head", "Looting bag"]
*/
#define VAR_GREATER_DEMON_ENUMLIST_FILTER_TERTIARY []
CONST_GREATER_DEMON_RULE (name:VAR_GREATER_DEMON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Green Dragon Drops ====

#define CONST_AREA_GREEN_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_GREEN_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_GREEN_DRAGON_RULE(_cond) rule ((area:CONST_AREA_GREEN_DRAGON0 ||   area:CONST_AREA_GREEN_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Green Dragon
enum: ["Dragon bones", "Green dragonhide"]
*/
#define VAR_GREEN_DRAGON_ENUMLIST_FILTER_100 []
CONST_GREEN_DRAGON_RULE (name:VAR_GREEN_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Green Dragon
enum: ["Adamant dagger", "Adamant full helm", "Adamant kiteshield", "Adamant sword", "Mithril 2h sword", "Mithril axe", "Mithril battleaxe", "Mithril kiteshield", "Mithril platelegs", "Mithril spear", "Rune dagger", "Steel battleaxe", "Steel platelegs"]
*/
#define VAR_GREEN_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_GREEN_DRAGON_RULE (name:VAR_GREEN_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Green Dragon
enum: ["Blood rune", "Death rune", "Fire rune", "Law rune", "Nature rune", "Water rune"]
*/
#define VAR_GREEN_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_GREEN_DRAGON_RULE (name:VAR_GREEN_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Green Dragon
enum: ["Adamantite ore", "Bass", "Mithril ore", "Monkfish"]
*/
#define VAR_GREEN_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_GREEN_DRAGON_RULE (name:VAR_GREEN_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Green Dragon
enum: ["Clue scroll (elite)", "Ensouled dragon head", "Looting bag", "Reward casket (elite)"]
*/
#define VAR_GREEN_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_GREEN_DRAGON_RULE (name:VAR_GREEN_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Hellhound Drops ====

#define CONST_AREA_HELLHOUND0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_HELLHOUND1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_HELLHOUND_RULE(_cond) rule ((area:CONST_AREA_HELLHOUND0 ||   area:CONST_AREA_HELLHOUND1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Hellhound
enum: ["Vile ashes"]
*/
#define VAR_HELLHOUND_ENUMLIST_FILTER_100 []
CONST_HELLHOUND_RULE (name:VAR_HELLHOUND_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Hellhound
enum: ["Smouldering stone"]
*/
#define VAR_HELLHOUND_ENUMLIST_FILTER_OTHER []
CONST_HELLHOUND_RULE (name:VAR_HELLHOUND_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Hellhound
enum: ["Brimstone key", "Clue scroll (elite)", "Ensouled hellhound head", "Looting bag", "Reward casket (elite)"]
*/
#define VAR_HELLHOUND_ENUMLIST_FILTER_TERTIARY []
CONST_HELLHOUND_RULE (name:VAR_HELLHOUND_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Hill Giant Drops ====

#define CONST_AREA_HILL_GIANT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_HILL_GIANT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_HILL_GIANT_RULE(_cond) rule ((area:CONST_AREA_HILL_GIANT0 ||   area:CONST_AREA_HILL_GIANT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Hill Giant
enum: ["Big bones"]
*/
#define VAR_HILL_GIANT_ENUMLIST_FILTER_100 []
CONST_HILL_GIANT_RULE (name:VAR_HILL_GIANT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Hill Giant
enum: ["Iron dagger", "Iron full helm", "Iron kiteshield", "Iron med helm", "Steel longsword", "Steel scimitar"]
*/
#define VAR_HILL_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_HILL_GIANT_RULE (name:VAR_HILL_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Hill Giant
enum: ["Chaos rune", "Cosmic rune", "Death rune", "Fire rune", "Iron arrow", "Law rune", "Mind rune", "Nature rune", "Steel arrow", "Water rune"]
*/
#define VAR_HILL_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_HILL_GIANT_RULE (name:VAR_HILL_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Hill Giant
enum: ["Beer", "Body talisman", "Limpwurt root"]
*/
#define VAR_HILL_GIANT_ENUMLIST_FILTER_OTHER []
CONST_HILL_GIANT_RULE (name:VAR_HILL_GIANT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Hill Giant
enum: ["Clue scroll (beginner)", "Curved bone", "Ensouled giant head", "Giant champion scroll", "Key (medium)", "Long bone", "Looting bag"]
*/
#define VAR_HILL_GIANT_ENUMLIST_FILTER_TERTIARY []
CONST_HILL_GIANT_RULE (name:VAR_HILL_GIANT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Hobgoblin Drops ====

#define CONST_AREA_HOBGOBLIN0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_HOBGOBLIN1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_HOBGOBLIN_RULE(_cond) rule ((area:CONST_AREA_HOBGOBLIN0 ||   area:CONST_AREA_HOBGOBLIN1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Hobgoblin
enum: ["Bones"]
*/
#define VAR_HOBGOBLIN_ENUMLIST_FILTER_100 []
CONST_HOBGOBLIN_RULE (name:VAR_HOBGOBLIN_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Hobgoblin
enum: ["Bronze spear", "Iron spear", "Iron sword", "Steel dagger", "Steel longsword", "Steel spear"]
*/
#define VAR_HOBGOBLIN_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_HOBGOBLIN_RULE (name:VAR_HOBGOBLIN_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Hobgoblin
enum: ["Body rune", "Chaos rune", "Cosmic rune", "Fire rune", "Iron javelin", "Law rune", "Nature rune", "Water rune"]
*/
#define VAR_HOBGOBLIN_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_HOBGOBLIN_RULE (name:VAR_HOBGOBLIN_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Hobgoblin
enum: ["Goblin mail", "Limpwurt root", "Trading sticks"]
*/
#define VAR_HOBGOBLIN_ENUMLIST_FILTER_OTHER []
CONST_HOBGOBLIN_RULE (name:VAR_HOBGOBLIN_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Hobgoblin
enum: ["Clue scroll (beginner)", "Hobgoblin champion scroll", "Looting bag"]
*/
#define VAR_HOBGOBLIN_ENUMLIST_FILTER_TERTIARY []
CONST_HOBGOBLIN_RULE (name:VAR_HOBGOBLIN_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Ice Giant Drops ====

#define CONST_AREA_ICE_GIANT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ICE_GIANT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ICE_GIANT_RULE(_cond) rule ((area:CONST_AREA_ICE_GIANT0 ||   area:CONST_AREA_ICE_GIANT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Ice Giant
enum: ["Big bones"]
*/
#define VAR_ICE_GIANT_ENUMLIST_FILTER_100 []
CONST_ICE_GIANT_RULE (name:VAR_ICE_GIANT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Ice Giant
enum: ["Adamant dagger", "Adamant kiteshield", "Adamant mace", "Adamant sq shield", "Adamant sword", "Black kiteshield", "Iron 2h sword", "Iron platelegs", "Mithril axe", "Mithril mace", "Mithril platelegs", "Mithril sq shield", "Rune dagger", "Steel axe", "Steel sword"]
*/
#define VAR_ICE_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ICE_GIANT_RULE (name:VAR_ICE_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Ice Giant
enum: ["Adamant arrow", "Blood rune", "Body rune", "Chaos rune", "Cosmic rune", "Death rune", "Law rune", "Mind rune", "Nature rune", "Water rune"]
*/
#define VAR_ICE_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ICE_GIANT_RULE (name:VAR_ICE_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Ice Giant
enum: ["Banana", "Jug of wine", "Mithril ore"]
*/
#define VAR_ICE_GIANT_ENUMLIST_FILTER_OTHER []
CONST_ICE_GIANT_RULE (name:VAR_ICE_GIANT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Ice Giant
enum: ["Clue scroll (beginner)", "Curved bone", "Ensouled giant head", "Frozen tear", "Giant champion scroll", "Ice giant ribs", "Long bone", "Looting bag"]
*/
#define VAR_ICE_GIANT_ENUMLIST_FILTER_TERTIARY []
CONST_ICE_GIANT_RULE (name:VAR_ICE_GIANT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Ice Warrior Drops ====

#define CONST_AREA_ICE_WARRIOR0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ICE_WARRIOR1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ICE_WARRIOR_RULE(_cond) rule ((area:CONST_AREA_ICE_WARRIOR0 ||   area:CONST_AREA_ICE_WARRIOR1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Ice Warrior
enum: ["Iron battleaxe", "Mithril mace"]
*/
#define VAR_ICE_WARRIOR_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ICE_WARRIOR_RULE (name:VAR_ICE_WARRIOR_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Ice Warrior
enum: ["Adamant arrow", "Blood rune", "Chaos rune", "Cosmic rune", "Death rune", "Law rune", "Mithril arrow", "Nature rune"]
*/
#define VAR_ICE_WARRIOR_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ICE_WARRIOR_RULE (name:VAR_ICE_WARRIOR_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Ice Warrior
enum: ["Frozen tear", "Looting bag"]
*/
#define VAR_ICE_WARRIOR_ENUMLIST_FILTER_TERTIARY []
CONST_ICE_WARRIOR_RULE (name:VAR_ICE_WARRIOR_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Icefiend Drops ====

#define CONST_AREA_ICEFIEND0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ICEFIEND1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ICEFIEND_RULE(_cond) rule ((area:CONST_AREA_ICEFIEND0 ||   area:CONST_AREA_ICEFIEND1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Icefiend
enum: ["Air rune", "Water rune"]
*/
#define VAR_ICEFIEND_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ICEFIEND_RULE (name:VAR_ICEFIEND_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Icefiend
enum: ["Coins"]
*/
#define VAR_ICEFIEND_ENUMLIST_FILTER_OTHER []
CONST_ICEFIEND_RULE (name:VAR_ICEFIEND_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Icefiend
enum: ["Frozen tear", "Looting bag"]
*/
#define VAR_ICEFIEND_ENUMLIST_FILTER_TERTIARY []
CONST_ICEFIEND_RULE (name:VAR_ICEFIEND_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Iron Dragon Drops ====

#define CONST_AREA_IRON_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_IRON_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_IRON_DRAGON_RULE(_cond) rule ((area:CONST_AREA_IRON_DRAGON0 ||   area:CONST_AREA_IRON_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Iron Dragon
enum: ["Dragon bones", "Iron bar"]
*/
#define VAR_IRON_DRAGON_ENUMLIST_FILTER_100 []
CONST_IRON_DRAGON_RULE (name:VAR_IRON_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Iron Dragon
enum: ["Adamant 2h sword", "Adamant axe", "Adamant battleaxe", "Adamant sq shield", "Rune battleaxe", "Rune dart(p)", "Rune knife", "Rune med helm"]
*/
#define VAR_IRON_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_IRON_DRAGON_RULE (name:VAR_IRON_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Iron Dragon
enum: ["Adamant bolts", "Blood rune", "Rune javelin", "Soul rune"]
*/
#define VAR_IRON_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_IRON_DRAGON_RULE (name:VAR_IRON_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Iron Dragon
enum: ["Adamantite bar", "Curry", "Runite limbs", "Super strength(1)"]
*/
#define VAR_IRON_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_IRON_DRAGON_RULE (name:VAR_IRON_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Iron Dragon
enum: ["Brimstone key", "Draconic visage"]
*/
#define VAR_IRON_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_IRON_DRAGON_RULE (name:VAR_IRON_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Jungle Horror Drops ====

#define CONST_AREA_JUNGLE_HORROR0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_JUNGLE_HORROR1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_JUNGLE_HORROR_RULE(_cond) rule ((area:CONST_AREA_JUNGLE_HORROR0 ||   area:CONST_AREA_JUNGLE_HORROR1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Jungle Horror
enum: ["Bones"]
*/
#define VAR_JUNGLE_HORROR_ENUMLIST_FILTER_100 []
CONST_JUNGLE_HORROR_RULE (name:VAR_JUNGLE_HORROR_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Jungle Horror
enum: ["Iron javelin", "Iron kiteshield", "Iron spear", "Iron warhammer"]
*/
#define VAR_JUNGLE_HORROR_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_JUNGLE_HORROR_RULE (name:VAR_JUNGLE_HORROR_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Jungle Horror
enum: ["Death rune", "Nature rune"]
*/
#define VAR_JUNGLE_HORROR_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_JUNGLE_HORROR_RULE (name:VAR_JUNGLE_HORROR_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Jungle Horror
enum: ["Iron ore", "Mahogany logs", "Teak logs"]
*/
#define VAR_JUNGLE_HORROR_ENUMLIST_FILTER_MATERIALS []
CONST_JUNGLE_HORROR_RULE (name:VAR_JUNGLE_HORROR_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Jungle Horror
enum: ["Big bones", "Bones", "Pineapple"]
*/
#define VAR_JUNGLE_HORROR_ENUMLIST_FILTER_OTHER []
CONST_JUNGLE_HORROR_RULE (name:VAR_JUNGLE_HORROR_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Jungle Horror
enum: ["Ensouled horror head"]
*/
#define VAR_JUNGLE_HORROR_ENUMLIST_FILTER_TERTIARY []
CONST_JUNGLE_HORROR_RULE (name:VAR_JUNGLE_HORROR_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Lava Dragon Drops ====

#define CONST_AREA_LAVA_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_LAVA_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_LAVA_DRAGON_RULE(_cond) rule ((area:CONST_AREA_LAVA_DRAGON0 ||   area:CONST_AREA_LAVA_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Lava Dragon
enum: ["Black dragonhide", "Lava dragon bones", "Lava scale"]
*/
#define VAR_LAVA_DRAGON_ENUMLIST_FILTER_100 []
CONST_LAVA_DRAGON_RULE (name:VAR_LAVA_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Lava Dragon
enum: ["Adamant 2h sword", "Adamant platebody", "Lava battlestaff", "Rune axe", "Rune dart", "Rune full helm", "Rune kiteshield", "Rune knife", "Rune longsword", "Rune med helm"]
*/
#define VAR_LAVA_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_LAVA_DRAGON_RULE (name:VAR_LAVA_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Lava Dragon
enum: ["Blood rune", "Death rune", "Fire rune", "Lava rune", "Law rune", "Rune javelin", "Runite bolts"]
*/
#define VAR_LAVA_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_LAVA_DRAGON_RULE (name:VAR_LAVA_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Lava Dragon
enum: ["Adamantite bar", "Chocolate cake", "Dragon javelin heads", "Fire orb", "Fire talisman", "Onyx bolt tips"]
*/
#define VAR_LAVA_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_LAVA_DRAGON_RULE (name:VAR_LAVA_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Lava Dragon
enum: ["Draconic visage", "Ensouled dragon head", "Looting bag"]
*/
#define VAR_LAVA_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_LAVA_DRAGON_RULE (name:VAR_LAVA_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Lesser Demon Drops ====

#define CONST_AREA_LESSER_DEMON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_LESSER_DEMON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_LESSER_DEMON_RULE(_cond) rule ((area:CONST_AREA_LESSER_DEMON0 ||   area:CONST_AREA_LESSER_DEMON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Lesser Demon
enum: ["Vile ashes"]
*/
#define VAR_LESSER_DEMON_ENUMLIST_FILTER_100 []
CONST_LESSER_DEMON_RULE (name:VAR_LESSER_DEMON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Lesser Demon
enum: ["Adamant chainbody", "Adamant dagger", "Adamant platebody", "Black full helm", "Mithril axe", "Mithril chainbody", "Mithril sq shield", "Rune med helm", "Steel axe", "Steel full helm", "Steel scimitar"]
*/
#define VAR_LESSER_DEMON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_LESSER_DEMON_RULE (name:VAR_LESSER_DEMON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Lesser Demon
enum: ["Blood rune", "Chaos rune", "Death rune", "Fire rune"]
*/
#define VAR_LESSER_DEMON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_LESSER_DEMON_RULE (name:VAR_LESSER_DEMON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Lesser Demon
enum: ["Gold ore", "Jug of wine"]
*/
#define VAR_LESSER_DEMON_ENUMLIST_FILTER_OTHER []
CONST_LESSER_DEMON_RULE (name:VAR_LESSER_DEMON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Lesser Demon
enum: ["Ensouled demon head", "Lesser demon champion scroll", "Looting bag"]
*/
#define VAR_LESSER_DEMON_ENUMLIST_FILTER_TERTIARY []
CONST_LESSER_DEMON_RULE (name:VAR_LESSER_DEMON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Magic Axe Drops ====

#define CONST_AREA_MAGIC_AXE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MAGIC_AXE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MAGIC_AXE_RULE(_cond) rule ((area:CONST_AREA_MAGIC_AXE0 ||   area:CONST_AREA_MAGIC_AXE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Magic Axe
enum: ["Iron battleaxe"]
*/
#define VAR_MAGIC_AXE_ENUMLIST_FILTER_100 []
CONST_MAGIC_AXE_RULE (name:VAR_MAGIC_AXE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Magic Axe
enum: ["Looting bag"]
*/
#define VAR_MAGIC_AXE_ENUMLIST_FILTER_TERTIARY []
CONST_MAGIC_AXE_RULE (name:VAR_MAGIC_AXE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Mammoth Drops ====

#define CONST_AREA_MAMMOTH0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MAMMOTH1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MAMMOTH_RULE(_cond) rule ((area:CONST_AREA_MAMMOTH0 ||   area:CONST_AREA_MAMMOTH1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Mammoth
enum: ["Big bones"]
*/
#define VAR_MAMMOTH_ENUMLIST_FILTER_100 []
CONST_MAMMOTH_RULE (name:VAR_MAMMOTH_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Mammoth
enum: ["Acorn", "Coins", "Dark fishing bait", "Limpwurt seed", "Lobster", "Prayer potion(1)", "Steel arrow"]
*/
#define VAR_MAMMOTH_ENUMLIST_FILTER_OTHER []
CONST_MAMMOTH_RULE (name:VAR_MAMMOTH_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Mammoth
enum: ["Curved bone", "Long bone", "Looting bag"]
*/
#define VAR_MAMMOTH_ENUMLIST_FILTER_TERTIARY []
CONST_MAMMOTH_RULE (name:VAR_MAMMOTH_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Minotaur Drops ====

#define CONST_AREA_MINOTAUR0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MINOTAUR1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MINOTAUR_RULE(_cond) rule ((area:CONST_AREA_MINOTAUR0 ||   area:CONST_AREA_MINOTAUR1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Minotaur
enum: ["Bones"]
*/
#define VAR_MINOTAUR_ENUMLIST_FILTER_100 []
CONST_MINOTAUR_RULE (name:VAR_MINOTAUR_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Minotaur
enum: ["Bronze arrow", "Bronze dagger", "Bronze full helm", "Bronze spear", "Iron arrow"]
*/
#define VAR_MINOTAUR_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_MINOTAUR_RULE (name:VAR_MINOTAUR_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Minotaur
enum: ["Mind rune"]
*/
#define VAR_MINOTAUR_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_MINOTAUR_RULE (name:VAR_MINOTAUR_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Minotaur
enum: ["Cooked meat", "Copper ore", "Pure essence", "Right skull half", "Rune essence", "Tin ore"]
*/
#define VAR_MINOTAUR_ENUMLIST_FILTER_OTHER []
CONST_MINOTAUR_RULE (name:VAR_MINOTAUR_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Minotaur
enum: ["Clue scroll (beginner)", "Ensouled minotaur head"]
*/
#define VAR_MINOTAUR_ENUMLIST_FILTER_TERTIARY []
CONST_MINOTAUR_RULE (name:VAR_MINOTAUR_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Mithril Dragon Drops ====

#define CONST_AREA_MITHRIL_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MITHRIL_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MITHRIL_DRAGON_RULE(_cond) rule ((area:CONST_AREA_MITHRIL_DRAGON0 ||   area:CONST_AREA_MITHRIL_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Mithril Dragon
enum: ["Dragon bones", "Mithril bar"]
*/
#define VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_100 []
CONST_MITHRIL_DRAGON_RULE (name:VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Mithril Dragon
enum: ["Dragon full helm", "Rune battleaxe", "Rune dart(p)", "Rune full helm", "Rune knife", "Rune mace", "Rune spear"]
*/
#define VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_MITHRIL_DRAGON_RULE (name:VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Mithril Dragon
enum: ["Blood rune", "Rune arrow", "Rune javelin", "Runite bolts", "Soul rune"]
*/
#define VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_MITHRIL_DRAGON_RULE (name:VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Mithril Dragon
enum: ["Ancient page", "Chewed bones", "Coins", "Dragon javelin heads", "Runite bar"]
*/
#define VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_MITHRIL_DRAGON_RULE (name:VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Mithril Dragon
enum: ["Brimstone key", "Draconic visage"]
*/
#define VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_MITHRIL_DRAGON_RULE (name:VAR_MITHRIL_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Moss Giant Drops ====

#define CONST_AREA_MOSS_GIANT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MOSS_GIANT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MOSS_GIANT_RULE(_cond) rule ((area:CONST_AREA_MOSS_GIANT0 ||   area:CONST_AREA_MOSS_GIANT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Moss Giant
enum: ["Big bones"]
*/
#define VAR_MOSS_GIANT_ENUMLIST_FILTER_100 []
CONST_MOSS_GIANT_RULE (name:VAR_MOSS_GIANT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Moss Giant
enum: ["Black sq shield", "Magic staff", "Mithril spear", "Mithril sword", "Steel kiteshield", "Steel med helm"]
*/
#define VAR_MOSS_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_MOSS_GIANT_RULE (name:VAR_MOSS_GIANT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Moss Giant
enum: ["Air rune", "Blood rune", "Chaos rune", "Cosmic rune", "Death rune", "Earth rune", "Iron arrow", "Law rune", "Nature rune", "Steel arrow"]
*/
#define VAR_MOSS_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_MOSS_GIANT_RULE (name:VAR_MOSS_GIANT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Moss Giant
enum: ["Coal", "Spinach roll", "Steel bar"]
*/
#define VAR_MOSS_GIANT_ENUMLIST_FILTER_OTHER []
CONST_MOSS_GIANT_RULE (name:VAR_MOSS_GIANT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Moss Giant
enum: ["Clue scroll (beginner)", "Curved bone", "Ensouled giant head", "Giant champion scroll", "Long bone", "Looting bag", "Moss giant bone", "Mossy key"]
*/
#define VAR_MOSS_GIANT_ENUMLIST_FILTER_TERTIARY []
CONST_MOSS_GIANT_RULE (name:VAR_MOSS_GIANT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Ogre Drops ====

#define CONST_AREA_OGRE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_OGRE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_OGRE_RULE(_cond) rule ((area:CONST_AREA_OGRE0 ||   area:CONST_AREA_OGRE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Ogre
enum: ["Big bones"]
*/
#define VAR_OGRE_ENUMLIST_FILTER_100 []
CONST_OGRE_RULE (name:VAR_OGRE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Ogre
enum: ["Curved bone", "Ensouled ogre head", "Long bone", "Looting bag", "Ogre ribs"]
*/
#define VAR_OGRE_ENUMLIST_FILTER_TERTIARY []
CONST_OGRE_RULE (name:VAR_OGRE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Otherworldly Being Drops ====

#define CONST_AREA_OTHERWORLDLY_BEING0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_OTHERWORLDLY_BEING1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_OTHERWORLDLY_BEING_RULE(_cond) rule ((area:CONST_AREA_OTHERWORLDLY_BEING0 ||   area:CONST_AREA_OTHERWORLDLY_BEING1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Otherwordly Being
enum: ["Blood rune", "Chaos rune", "Cosmic rune", "Death rune", "Law rune", "Nature rune"]
*/
#define VAR_OTHERWORLDLY_BEING_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_OTHERWORLDLY_BEING_RULE (name:VAR_OTHERWORLDLY_BEING_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Otherwordly Being
enum: ["Coins", "Mackerel", "Mithril mace", "Ruby ring"]
*/
#define VAR_OTHERWORLDLY_BEING_ENUMLIST_FILTER_OTHER []
CONST_OTHERWORLDLY_BEING_RULE (name:VAR_OTHERWORLDLY_BEING_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Pirate Drops ====

#define CONST_AREA_PIRATE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_PIRATE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_PIRATE_RULE(_cond) rule ((area:CONST_AREA_PIRATE0 ||   area:CONST_AREA_PIRATE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Pirate
enum: ["Bones"]
*/
#define VAR_PIRATE_ENUMLIST_FILTER_100 []
CONST_PIRATE_RULE (name:VAR_PIRATE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Pirate
enum: ["Bronze scimitar", "Iron dagger", "Iron platebody"]
*/
#define VAR_PIRATE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_PIRATE_RULE (name:VAR_PIRATE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Pirate
enum: ["Air rune", "Bronze arrow", "Chaos rune", "Earth rune", "Fire rune", "Iron bolts", "Law rune", "Nature rune"]
*/
#define VAR_PIRATE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_PIRATE_RULE (name:VAR_PIRATE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Pirate
enum: ["Chef's hat", "Iron bar", "Right eye patch"]
*/
#define VAR_PIRATE_ENUMLIST_FILTER_OTHER []
CONST_PIRATE_RULE (name:VAR_PIRATE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Pirate
enum: ["Key (medium)", "Looting bag"]
*/
#define VAR_PIRATE_ENUMLIST_FILTER_TERTIARY []
CONST_PIRATE_RULE (name:VAR_PIRATE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Rat Drops ====

#define CONST_AREA_RAT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_RAT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_RAT_RULE(_cond) rule ((area:CONST_AREA_RAT0 ||   area:CONST_AREA_RAT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Rat
enum: ["Bones"]
*/
#define VAR_RAT_ENUMLIST_FILTER_100 []
CONST_RAT_RULE (name:VAR_RAT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Rat
enum: ["Looting bag", "Rat bone", "Rat's tail"]
*/
#define VAR_RAT_ENUMLIST_FILTER_TERTIARY []
CONST_RAT_RULE (name:VAR_RAT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Red Dragon Drops ====

#define CONST_AREA_RED_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_RED_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_RED_DRAGON_RULE(_cond) rule ((area:CONST_AREA_RED_DRAGON0 ||   area:CONST_AREA_RED_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Red Dragon
enum: ["Dragon bones", "Red dragonhide"]
*/
#define VAR_RED_DRAGON_ENUMLIST_FILTER_100 []
CONST_RED_DRAGON_RULE (name:VAR_RED_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Red Dragon
enum: ["Adamant platebody", "Mithril 2h sword", "Mithril axe", "Mithril battleaxe", "Mithril javelin", "Mithril kiteshield", "Rune dart", "Rune longsword"]
*/
#define VAR_RED_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_RED_DRAGON_RULE (name:VAR_RED_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Red Dragon
enum: ["Blood rune", "Death rune", "Law rune", "Rune arrow"]
*/
#define VAR_RED_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_RED_DRAGON_RULE (name:VAR_RED_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Red Dragon
enum: ["Adamantite bar", "Chocolate cake", "Dragon javelin heads"]
*/
#define VAR_RED_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_RED_DRAGON_RULE (name:VAR_RED_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Red Dragon
enum: ["Brimstone key", "Ensouled dragon head", "Grubby key", "Tattered moon page", "Tattered sun page", "Tattered temple page"]
*/
#define VAR_RED_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_RED_DRAGON_RULE (name:VAR_RED_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Rogue Drops ====

#define CONST_AREA_ROGUE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ROGUE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ROGUE_RULE(_cond) rule ((area:CONST_AREA_ROGUE0 ||   area:CONST_AREA_ROGUE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Rogue
enum: ["Bones", "Coins"]
*/
#define VAR_ROGUE_ENUMLIST_FILTER_100 []
CONST_ROGUE_RULE (name:VAR_ROGUE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Rogue
enum: ["Bronze med helm", "Iron dagger"]
*/
#define VAR_ROGUE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ROGUE_RULE (name:VAR_ROGUE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Rogue
enum: ["Bronze arrow", "Bronze bolts", "Chaos rune", "Earth rune", "Fire rune", "Mind rune"]
*/
#define VAR_ROGUE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ROGUE_RULE (name:VAR_ROGUE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Rogue
enum: ["Cabbage", "Copper ore", "Earth talisman", "Fishing bait"]
*/
#define VAR_ROGUE_ENUMLIST_FILTER_OTHER []
CONST_ROGUE_RULE (name:VAR_ROGUE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Rogue
enum: ["Clue scroll (beginner)", "Looting bag"]
*/
#define VAR_ROGUE_ENUMLIST_FILTER_TERTIARY []
CONST_ROGUE_RULE (name:VAR_ROGUE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Scorpion Drops ====

#define CONST_AREA_SCORPION0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SCORPION1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SCORPION_RULE(_cond) rule ((area:CONST_AREA_SCORPION0 ||   area:CONST_AREA_SCORPION1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Scorpion
enum: ["Book page 1"]
*/
#define VAR_SCORPION_ENUMLIST_FILTER_100 []
CONST_SCORPION_RULE (name:VAR_SCORPION_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Scorpion
enum: ["Clue scroll (beginner)", "Ensouled scorpion head", "Looting bag"]
*/
#define VAR_SCORPION_ENUMLIST_FILTER_TERTIARY []
CONST_SCORPION_RULE (name:VAR_SCORPION_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Shadow Warrior Drops ====

#define CONST_AREA_SHADOW_WARRIOR0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SHADOW_WARRIOR1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SHADOW_WARRIOR_RULE(_cond) rule ((area:CONST_AREA_SHADOW_WARRIOR0 ||   area:CONST_AREA_SHADOW_WARRIOR1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Shadow Warrior
enum: ["Adamant spear", "Black dagger(p)", "Black knife", "Black longsword", "Black robe"]
*/
#define VAR_SHADOW_WARRIOR_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_SHADOW_WARRIOR_RULE (name:VAR_SHADOW_WARRIOR_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Shadow Warrior
enum: ["Air rune", "Blood rune", "Cosmic rune", "Death rune"]
*/
#define VAR_SHADOW_WARRIOR_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_SHADOW_WARRIOR_RULE (name:VAR_SHADOW_WARRIOR_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Shadow Warrior
enum: ["Coins", "Mithril bar", "Weapon poison"]
*/
#define VAR_SHADOW_WARRIOR_ENUMLIST_FILTER_OTHER []
CONST_SHADOW_WARRIOR_RULE (name:VAR_SHADOW_WARRIOR_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Skeleton Drops ====

#define CONST_AREA_SKELETON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SKELETON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SKELETON_RULE(_cond) rule ((area:CONST_AREA_SKELETON0 ||   area:CONST_AREA_SKELETON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Skeleton
enum: ["Bones"]
*/
#define VAR_SKELETON_ENUMLIST_FILTER_100 []
CONST_SKELETON_RULE (name:VAR_SKELETON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Skeleton
enum: ["Iron axe", "Iron med helm", "Iron scimitar", "Iron sword"]
*/
#define VAR_SKELETON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_SKELETON_RULE (name:VAR_SKELETON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Skeleton
enum: ["Air rune", "Bronze arrow", "Chaos rune", "Cosmic rune", "Earth rune", "Fire rune", "Iron arrow", "Law rune", "Nature rune", "Steel arrow", "Water rune"]
*/
#define VAR_SKELETON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_SKELETON_RULE (name:VAR_SKELETON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Skeleton
enum: ["Bronze bar", "Fire talisman", "Grain", "Iron dagger", "Iron ore"]
*/
#define VAR_SKELETON_ENUMLIST_FILTER_OTHER []
CONST_SKELETON_RULE (name:VAR_SKELETON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Skeleton
enum: ["Clue scroll (beginner)", "Looting bag", "Skeleton champion scroll"]
*/
#define VAR_SKELETON_ENUMLIST_FILTER_TERTIARY []
CONST_SKELETON_RULE (name:VAR_SKELETON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Sourhog Drops ====

#define CONST_AREA_SOURHOG0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SOURHOG1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SOURHOG_RULE(_cond) rule ((area:CONST_AREA_SOURHOG0 ||   area:CONST_AREA_SOURHOG1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Sourhog
enum: ["Big bones"]
*/
#define VAR_SOURHOG_ENUMLIST_FILTER_100 []
CONST_SOURHOG_RULE (name:VAR_SOURHOG_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Sourhog
enum: ["Adamant kiteshield", "Adamant scimitar"]
*/
#define VAR_SOURHOG_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_SOURHOG_RULE (name:VAR_SOURHOG_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Sourhog
enum: ["Air rune", "Chaos rune", "Earth rune", "Mind rune", "Nature rune", "Steel arrow"]
*/
#define VAR_SOURHOG_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_SOURHOG_RULE (name:VAR_SOURHOG_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Sourhog
enum: ["Cabbage", "Cooking apple", "Limpwurt root", "Potato"]
*/
#define VAR_SOURHOG_ENUMLIST_FILTER_OTHER []
CONST_SOURHOG_RULE (name:VAR_SOURHOG_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Sourhog
enum: ["Curved bone", "Long bone"]
*/
#define VAR_SOURHOG_ENUMLIST_FILTER_TERTIARY []
CONST_SOURHOG_RULE (name:VAR_SOURHOG_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Steel Dragon Drops ====

#define CONST_AREA_STEEL_DRAGON0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_STEEL_DRAGON1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_STEEL_DRAGON_RULE(_cond) rule ((area:CONST_AREA_STEEL_DRAGON0 ||   area:CONST_AREA_STEEL_DRAGON1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Steel Dragon
enum: ["Dragon bones", "Steel bar"]
*/
#define VAR_STEEL_DRAGON_ENUMLIST_FILTER_100 []
CONST_STEEL_DRAGON_RULE (name:VAR_STEEL_DRAGON_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Steel Dragon
enum: ["Adamant kiteshield", "Rune axe", "Rune dart(p)", "Rune full helm", "Rune knife", "Rune mace"]
*/
#define VAR_STEEL_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_STEEL_DRAGON_RULE (name:VAR_STEEL_DRAGON_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Steel Dragon
enum: ["Blood rune", "Rune javelin", "Runite bolts", "Soul rune"]
*/
#define VAR_STEEL_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_STEEL_DRAGON_RULE (name:VAR_STEEL_DRAGON_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Steel Dragon
enum: ["Curry", "Dragon javelin heads", "Runite bar", "Runite limbs", "Super attack(3)", "Super defence(2)"]
*/
#define VAR_STEEL_DRAGON_ENUMLIST_FILTER_OTHER []
CONST_STEEL_DRAGON_RULE (name:VAR_STEEL_DRAGON_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Steel Dragon
enum: ["Brimstone key", "Draconic visage"]
*/
#define VAR_STEEL_DRAGON_ENUMLIST_FILTER_TERTIARY []
CONST_STEEL_DRAGON_RULE (name:VAR_STEEL_DRAGON_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Suqah Drops ====

#define CONST_AREA_SUQAH0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SUQAH1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SUQAH_RULE(_cond) rule ((area:CONST_AREA_SUQAH0 ||   area:CONST_AREA_SUQAH1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Suqah
enum: ["Big bones", "Suqah hide"]
*/
#define VAR_SUQAH_ENUMLIST_FILTER_100 []
CONST_SUQAH_RULE (name:VAR_SUQAH_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Suqah
enum: ["Grimy guam leaf", "Grimy marrentill", "Suqah tooth"]
*/
#define VAR_SUQAH_ENUMLIST_FILTER_OTHER []
CONST_SUQAH_RULE (name:VAR_SUQAH_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Suqah
enum: ["Curved bone", "Long bone"]
*/
#define VAR_SUQAH_ENUMLIST_FILTER_TERTIARY []
CONST_SUQAH_RULE (name:VAR_SUQAH_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Waterfiend Drops ====

#define CONST_AREA_WATERFIEND0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_WATERFIEND1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_WATERFIEND_RULE(_cond) rule ((area:CONST_AREA_WATERFIEND0 ||   area:CONST_AREA_WATERFIEND1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Waterfiend
enum: ["Fiendish ashes", "Water rune"]
*/
#define VAR_WATERFIEND_ENUMLIST_FILTER_100 []
CONST_WATERFIEND_RULE (name:VAR_WATERFIEND_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Waterfiend
enum: ["Adamant chainbody", "Adamant warhammer", "Blue d'hide vambraces", "Mystic water staff", "Rune full helm", "Rune med helm", "Staff of water", "Water battlestaff"]
*/
#define VAR_WATERFIEND_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_WATERFIEND_RULE (name:VAR_WATERFIEND_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Waterfiend
enum: ["Blood rune", "Death rune", "Mist rune", "Mithril arrow", "Mud rune", "Sapphire bolts", "Steam rune", "Water rune"]
*/
#define VAR_WATERFIEND_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_WATERFIEND_RULE (name:VAR_WATERFIEND_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Waterfiend
enum: ["Mithril bar", "Mithril ore", "Raw lobster", "Raw shark", "Shark", "Uncut diamond", "Uncut emerald", "Uncut ruby", "Uncut sapphire", "Watermelon seed"]
*/
#define VAR_WATERFIEND_ENUMLIST_FILTER_MATERIALS []
CONST_WATERFIEND_RULE (name:VAR_WATERFIEND_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Waterfiend
enum: ["Coins", "Oyster", "Seaweed", "Snape grass", "Vial of water", "Water orb", "Water talisman"]
*/
#define VAR_WATERFIEND_ENUMLIST_FILTER_OTHER []
CONST_WATERFIEND_RULE (name:VAR_WATERFIEND_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Waterfiend
enum: ["Brimstone key", "Clue scroll (elite)", "Crystal shard", "Reward casket (elite)"]
*/
#define VAR_WATERFIEND_ENUMLIST_FILTER_TERTIARY []
CONST_WATERFIEND_RULE (name:VAR_WATERFIEND_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Werewolf Drops ====

#define CONST_AREA_WEREWOLF0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_WEREWOLF1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_WEREWOLF_RULE(_cond) rule ((area:CONST_AREA_WEREWOLF0 ||   area:CONST_AREA_WEREWOLF1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Werewolf
enum: ["Wolf bones"]
*/
#define VAR_WEREWOLF_ENUMLIST_FILTER_100 []
CONST_WEREWOLF_RULE (name:VAR_WEREWOLF_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Werewolf
enum: ["Mithril chainbody", "Mithril sq shield", "Rune med helm", "Steel axe", "Steel full helm", "Steel scimitar"]
*/
#define VAR_WEREWOLF_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_WEREWOLF_RULE (name:VAR_WEREWOLF_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Werewolf
enum: ["Fur", "Grey wolf fur"]
*/
#define VAR_WEREWOLF_ENUMLIST_FILTER_OTHER []
CONST_WEREWOLF_RULE (name:VAR_WEREWOLF_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Werewolf
enum: ["Looting bag", "Werewolf bone"]
*/
#define VAR_WEREWOLF_ENUMLIST_FILTER_TERTIARY []
CONST_WEREWOLF_RULE (name:VAR_WEREWOLF_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Wolf Drops ====

#define CONST_AREA_WOLF0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_WOLF1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_WOLF_RULE(_cond) rule ((area:CONST_AREA_WOLF0 ||   area:CONST_AREA_WOLF1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Wolf
enum: ["Bones", "Wolf bones"]
*/
#define VAR_WOLF_ENUMLIST_FILTER_100 []
CONST_WOLF_RULE (name:VAR_WOLF_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Wolf
enum: ["Clue scroll (beginner)", "Looting bag", "Wolf bone"]
*/
#define VAR_WOLF_ENUMLIST_FILTER_TERTIARY []
CONST_WOLF_RULE (name:VAR_WOLF_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Zombie Drops ====

#define CONST_AREA_ZOMBIE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ZOMBIE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ZOMBIE_RULE(_cond) rule ((area:CONST_AREA_ZOMBIE0 ||   area:CONST_AREA_ZOMBIE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Zombie
enum: ["Bones"]
*/
#define VAR_ZOMBIE_ENUMLIST_FILTER_100 []
CONST_ZOMBIE_RULE (name:VAR_ZOMBIE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Zombie
enum: ["Bronze kiteshield", "Bronze longsword", "Bronze med helm", "Iron axe", "Iron dagger", "Iron mace"]
*/
#define VAR_ZOMBIE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ZOMBIE_RULE (name:VAR_ZOMBIE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Zombie
enum: ["Air rune", "Body rune", "Chaos rune", "Cosmic rune", "Fire rune", "Iron arrow", "Mind rune", "Mithril arrow", "Nature rune", "Steel arrow"]
*/
#define VAR_ZOMBIE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ZOMBIE_RULE (name:VAR_ZOMBIE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Zombie
enum: ["Copper ore", "Eye of newt", "Fishing bait", "Tin ore", "Tinderbox"]
*/
#define VAR_ZOMBIE_ENUMLIST_FILTER_OTHER []
CONST_ZOMBIE_RULE (name:VAR_ZOMBIE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Zombie
enum: ["Zombie bone", "Zombie champion scroll"]
*/
#define VAR_ZOMBIE_ENUMLIST_FILTER_TERTIARY []
CONST_ZOMBIE_RULE (name:VAR_ZOMBIE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

/*@ define:module:slayer
name: 'PvM: Slayer'
description: |
  Provides per-monster filtering for common slayer monsters.
*/

// ==== Crawling Hand Drops ====

#define CONST_AREA_CRAWLING_HAND0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_CRAWLING_HAND1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_CRAWLING_HAND_RULE(_cond) rule ((area:CONST_AREA_CRAWLING_HAND0 ||   area:CONST_AREA_CRAWLING_HAND1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Crawling Hand
enum: ["Bones"]
*/
#define VAR_CRAWLING_HAND_ENUMLIST_FILTER_100 []
CONST_CRAWLING_HAND_RULE (name:VAR_CRAWLING_HAND_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Crawling Hand
enum: ["Crawling hand"]
*/
#define VAR_CRAWLING_HAND_ENUMLIST_FILTER_TERTIARY []
CONST_CRAWLING_HAND_RULE (name:VAR_CRAWLING_HAND_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Banshee Drops ====

#define CONST_AREA_BANSHEE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BANSHEE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BANSHEE_RULE(_cond) rule ((area:CONST_AREA_BANSHEE0 ||   area:CONST_AREA_BANSHEE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Banshee
enum: ["Iron dagger", "Iron kiteshield", "Iron mace", "Mystic gloves (dark)"]
*/
#define VAR_BANSHEE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BANSHEE_RULE (name:VAR_BANSHEE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Banshee
enum: ["Air rune", "Chaos rune", "Cosmic rune", "Fire rune"]
*/
#define VAR_BANSHEE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BANSHEE_RULE (name:VAR_BANSHEE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: Banshee
enum: ["Iron ore", "Pure essence"]
*/
#define VAR_BANSHEE_ENUMLIST_FILTER_MATERIALS []
CONST_BANSHEE_RULE (name:VAR_BANSHEE_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Banshee
enum: ["Eye of newt", "Fishing bait"]
*/
#define VAR_BANSHEE_ENUMLIST_FILTER_OTHER []
CONST_BANSHEE_RULE (name:VAR_BANSHEE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Rockslug Drops ====

#define CONST_AREA_ROCKSLUG0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ROCKSLUG1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ROCKSLUG_RULE(_cond) rule ((area:CONST_AREA_ROCKSLUG0 ||   area:CONST_AREA_ROCKSLUG1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Rockslug
enum: ["Mystic gloves (light)"]
*/
#define VAR_ROCKSLUG_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ROCKSLUG_RULE (name:VAR_ROCKSLUG_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Rockslug
enum: ["Chaos rune", "Earth rune"]
*/
#define VAR_ROCKSLUG_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ROCKSLUG_RULE (name:VAR_ROCKSLUG_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Rockslug
enum: ["Dwarven stout", "Hammer"]
*/
#define VAR_ROCKSLUG_ENUMLIST_FILTER_OTHER []
CONST_ROCKSLUG_RULE (name:VAR_ROCKSLUG_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Desert Lizard Drops ====

#define CONST_AREA_DESERT_LIZARD0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_DESERT_LIZARD1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_DESERT_LIZARD_RULE(_cond) rule ((area:CONST_AREA_DESERT_LIZARD0 ||   area:CONST_AREA_DESERT_LIZARD1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Desert Lizard
enum: ["Bones"]
*/
#define VAR_DESERT_LIZARD_ENUMLIST_FILTER_100 []
CONST_DESERT_LIZARD_RULE (name:VAR_DESERT_LIZARD_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Desert Lizard
enum: ["Mystic gloves (light)"]
*/
#define VAR_DESERT_LIZARD_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_DESERT_LIZARD_RULE (name:VAR_DESERT_LIZARD_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Desert Lizard
enum: ["Fire rune", "Nature rune"]
*/
#define VAR_DESERT_LIZARD_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_DESERT_LIZARD_RULE (name:VAR_DESERT_LIZARD_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Desert Lizard
enum: ["Kebab", "Waterskin(0)"]
*/
#define VAR_DESERT_LIZARD_ENUMLIST_FILTER_OTHER []
CONST_DESERT_LIZARD_RULE (name:VAR_DESERT_LIZARD_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Cockatrice Drops ====

#define CONST_AREA_COCKATRICE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_COCKATRICE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_COCKATRICE_RULE(_cond) rule ((area:CONST_AREA_COCKATRICE0 ||   area:CONST_AREA_COCKATRICE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: Cockatrice
enum: ["Bones"]
*/
#define VAR_COCKATRICE_ENUMLIST_FILTER_100 []
CONST_COCKATRICE_RULE (name:VAR_COCKATRICE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: Cockatrice
enum: ["Iron boots", "Iron javelin", "Iron sword", "Mystic boots (light)", "Steel dagger", "Steel longsword"]
*/
#define VAR_COCKATRICE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_COCKATRICE_RULE (name:VAR_COCKATRICE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: Cockatrice
enum: ["Fire rune", "Law rune", "Nature rune", "Water rune"]
*/
#define VAR_COCKATRICE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_COCKATRICE_RULE (name:VAR_COCKATRICE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: Cockatrice
enum: ["Limpwurt root"]
*/
#define VAR_COCKATRICE_ENUMLIST_FILTER_OTHER []
CONST_COCKATRICE_RULE (name:VAR_COCKATRICE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: Cockatrice
enum: ["Cockatrice head"]
*/
#define VAR_COCKATRICE_ENUMLIST_FILTER_TERTIARY []
CONST_COCKATRICE_RULE (name:VAR_COCKATRICE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Pyrefiend Drops ====

#define CONST_AREA_PYREFIEND0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_PYREFIEND1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_PYREFIEND_RULE(_cond) rule ((area:CONST_AREA_PYREFIEND0 ||   area:CONST_AREA_PYREFIEND1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: PYREFIEND
enum: ["Fiendish ashes"]
*/
#define VAR_PYREFIEND_ENUMLIST_FILTER_100 []
CONST_PYREFIEND_RULE (name:VAR_PYREFIEND_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: PYREFIEND
enum: ["Adamant med helm", "Mithril chainbody", "Staff of fire", "Steel axe", "Steel boots", "Steel full helm"]
*/
#define VAR_PYREFIEND_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_PYREFIEND_RULE (name:VAR_PYREFIEND_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: PYREFIEND
enum: ["Chaos rune", "Death rune", "Fire rune"]
*/
#define VAR_PYREFIEND_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_PYREFIEND_RULE (name:VAR_PYREFIEND_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: PYREFIEND
enum: ["Gold ore", "Jug of wine"]
*/
#define VAR_PYREFIEND_ENUMLIST_FILTER_OTHER []
CONST_PYREFIEND_RULE (name:VAR_PYREFIEND_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: PYREFIEND
enum: ["Looting bag"]
*/
#define VAR_PYREFIEND_ENUMLIST_FILTER_TERTIARY []
CONST_PYREFIEND_RULE (name:VAR_PYREFIEND_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Mogre Drops ====

#define CONST_AREA_MOGRE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MOGRE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MOGRE_RULE(_cond) rule ((area:CONST_AREA_MOGRE0 ||   area:CONST_AREA_MOGRE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: MOGRE
enum: ["Big bones"]
*/
#define VAR_MOGRE_ENUMLIST_FILTER_100 []
CONST_MOGRE_RULE (name:VAR_MOGRE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: MOGRE
enum: ["Water rune"]
*/
#define VAR_MOGRE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_MOGRE_RULE (name:VAR_MOGRE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: MOGRE
enum: ["Fishbowl", "Fishing bait", "Flippers", "Mudskipper hat", "Oyster", "Seaweed", "Staff of water"]
*/
#define VAR_MOGRE_ENUMLIST_FILTER_OTHER []
CONST_MOGRE_RULE (name:VAR_MOGRE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: MOGRE
enum: ["Curved bone", "Long bone", "Mogre bone"]
*/
#define VAR_MOGRE_ENUMLIST_FILTER_TERTIARY []
CONST_MOGRE_RULE (name:VAR_MOGRE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Harpie Bug Swarm Drops ====

#define CONST_AREA_HARPIE_BUG_SWARM0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_HARPIE_BUG_SWARM1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_HARPIE_BUG_SWARM_RULE(_cond) rule ((area:CONST_AREA_HARPIE_BUG_SWARM0 ||   area:CONST_AREA_HARPIE_BUG_SWARM1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: HARPIE_BUG_SWARM
enum: ["Adamant med helm", "Mithril chainbody", "Staff of fire", "Steel axe", "Steel boots", "Steel full helm"]
*/
#define VAR_HARPIE_BUG_SWARM_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_HARPIE_BUG_SWARM_RULE (name:VAR_HARPIE_BUG_SWARM_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: HARPIE_BUG_SWARM
enum: ["Chaos rune", "Death rune", "Fire rune"]
*/
#define VAR_HARPIE_BUG_SWARM_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_HARPIE_BUG_SWARM_RULE (name:VAR_HARPIE_BUG_SWARM_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: HARPIE_BUG_SWARM
enum: ["Gold ore", "Jug of wine"]
*/
#define VAR_HARPIE_BUG_SWARM_ENUMLIST_FILTER_OTHER []
CONST_HARPIE_BUG_SWARM_RULE (name:VAR_HARPIE_BUG_SWARM_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Killerwatt Drops ====

#define CONST_AREA_KILLERWATT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_KILLERWATT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_KILLERWATT_RULE(_cond) rule ((area:CONST_AREA_KILLERWATT0 ||   area:CONST_AREA_KILLERWATT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: KILLERWATT
enum: ["Ashes"]
*/
#define VAR_KILLERWATT_ENUMLIST_FILTER_100 []
CONST_KILLERWATT_RULE (name:VAR_KILLERWATT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: KILLERWATT
enum: ["Air battlestaff", "Fire battlestaff", "Mystic fire staff", "Staff of air", "Staff of fire"]
*/
#define VAR_KILLERWATT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_KILLERWATT_RULE (name:VAR_KILLERWATT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: KILLERWATT
enum: ["Air rune", "Cannonball", "Chaos rune", "Death rune", "Fire rune", "Nature rune", "Steam rune"]
*/
#define VAR_KILLERWATT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_KILLERWATT_RULE (name:VAR_KILLERWATT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: KILLERWATT
enum: ["Fire orb", "Soda ash"]
*/
#define VAR_KILLERWATT_ENUMLIST_FILTER_OTHER []
CONST_KILLERWATT_RULE (name:VAR_KILLERWATT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Molanisk Drops ====

#define CONST_AREA_MOLANISK0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_MOLANISK1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_MOLANISK_RULE(_cond) rule ((area:CONST_AREA_MOLANISK0 ||   area:CONST_AREA_MOLANISK1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: MOLANISK
enum: ["Bones"]
*/
#define VAR_MOLANISK_ENUMLIST_FILTER_100 []
CONST_MOLANISK_RULE (name:VAR_MOLANISK_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: MOLANISK
enum: ["Cosmic rune", "Earth rune", "Mud rune", "Nature rune", "Water rune"]
*/
#define VAR_MOLANISK_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_MOLANISK_RULE (name:VAR_MOLANISK_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: MOLANISK
enum: ["Coins", "Mole claw", "Swamp weed"]
*/
#define VAR_MOLANISK_ENUMLIST_FILTER_OTHER []
CONST_MOLANISK_RULE (name:VAR_MOLANISK_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Basilisk Drops ====

#define CONST_AREA_BASILISK0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BASILISK1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BASILISK_RULE(_cond) rule ((area:CONST_AREA_BASILISK0 ||   area:CONST_AREA_BASILISK1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: BASILISK
enum: ["Bones"]
*/
#define VAR_BASILISK_ENUMLIST_FILTER_100 []
CONST_BASILISK_RULE (name:VAR_BASILISK_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: BASILISK
enum: ["Adamant full helm", "Mithril axe", "Mithril kiteshield", "Mithril spear", "Mystic hat (light)", "Rune dagger", "Steel battleaxe"]
*/
#define VAR_BASILISK_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BASILISK_RULE (name:VAR_BASILISK_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: BASILISK
enum: ["Law rune", "Nature rune", "Water rune"]
*/
#define VAR_BASILISK_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BASILISK_RULE (name:VAR_BASILISK_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: BASILISK
enum: ["Adamantite ore"]
*/
#define VAR_BASILISK_ENUMLIST_FILTER_MATERIALS []
CONST_BASILISK_RULE (name:VAR_BASILISK_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: BASILISK
enum: ["Basilisk bone", "Basilisk head", "Brimstone key", "Clue scroll (elite)", "Reward casket (elite)"]
*/
#define VAR_BASILISK_ENUMLIST_FILTER_TERTIARY []
CONST_BASILISK_RULE (name:VAR_BASILISK_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Sulphur Lizard Drops ====

#define CONST_AREA_SULPHUR_LIZARD0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SULPHUR_LIZARD1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SULPHUR_LIZARD_RULE(_cond) rule ((area:CONST_AREA_SULPHUR_LIZARD0 ||   area:CONST_AREA_SULPHUR_LIZARD1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: SULPHUR_LIZARD
enum: ["Bones"]
*/
#define VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_100 []
CONST_SULPHUR_LIZARD_RULE (name:VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: SULPHUR_LIZARD
enum: ["Mystic gloves (light)"]
*/
#define VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_SULPHUR_LIZARD_RULE (name:VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: SULPHUR_LIZARD
enum: ["Fire rune", "Nature rune"]
*/
#define VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_SULPHUR_LIZARD_RULE (name:VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: SULPHUR_LIZARD
enum: ["Rainbow fish"]
*/
#define VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_OTHER []
CONST_SULPHUR_LIZARD_RULE (name:VAR_SULPHUR_LIZARD_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Frost Nagua Drops ====

#define CONST_AREA_FROST_NAGUA0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_FROST_NAGUA1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_FROST_NAGUA_RULE(_cond) rule ((area:CONST_AREA_FROST_NAGUA0 ||   area:CONST_AREA_FROST_NAGUA1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: FROST_NAGUA
enum: ["Chaos rune", "Death rune", "Nature rune", "Water rune"]
*/
#define VAR_FROST_NAGUA_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_FROST_NAGUA_RULE (name:VAR_FROST_NAGUA_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: FROST_NAGUA
enum: ["Blessed bone shards", "Jug of water", "Prayer potion(1)", "Rune mace", "Water orb", "Water talisman"]
*/
#define VAR_FROST_NAGUA_ENUMLIST_FILTER_OTHER []
CONST_FROST_NAGUA_RULE (name:VAR_FROST_NAGUA_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: FROST_NAGUA
enum: ["Brimstone key", "Clue scroll (elite)", "Clue scroll (hard)", "Frozen tear", "Glacial temotli", "Pendant of ates (inert)", "Reward casket (elite)", "Tooth half of key (moon key)"]
*/
#define VAR_FROST_NAGUA_ENUMLIST_FILTER_TERTIARY []
CONST_FROST_NAGUA_RULE (name:VAR_FROST_NAGUA_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Bloodveld Drops ====

#define CONST_AREA_BLOODVELD0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BLOODVELD1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BLOODVELD_RULE(_cond) rule ((area:CONST_AREA_BLOODVELD0 ||   area:CONST_AREA_BLOODVELD1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: BLOODVELD
enum: ["Vile ashes"]
*/
#define VAR_BLOODVELD_ENUMLIST_FILTER_100 []
CONST_BLOODVELD_RULE (name:VAR_BLOODVELD_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: BLOODVELD
enum: ["Black boots", "Mithril chainbody", "Mithril sq shield", "Rune med helm", "Steel axe", "Steel full helm", "Steel scimitar"]
*/
#define VAR_BLOODVELD_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BLOODVELD_RULE (name:VAR_BLOODVELD_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: BLOODVELD
enum: ["Blood rune", "Fire rune"]
*/
#define VAR_BLOODVELD_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BLOODVELD_RULE (name:VAR_BLOODVELD_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: BLOODVELD
enum: ["Big bones", "Bones", "Gold ore", "Meat pizza"]
*/
#define VAR_BLOODVELD_ENUMLIST_FILTER_OTHER []
CONST_BLOODVELD_RULE (name:VAR_BLOODVELD_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: BLOODVELD
enum: ["Brimstone key", "Clue scroll (elite)", "Ensouled bloodveld head", "Looting bag", "Reward casket (elite)"]
*/
#define VAR_BLOODVELD_ENUMLIST_FILTER_TERTIARY []
CONST_BLOODVELD_RULE (name:VAR_BLOODVELD_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Jelly Drops ====

#define CONST_AREA_JELLY0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_JELLY1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_JELLY_RULE(_cond) rule ((area:CONST_AREA_JELLY0 ||   area:CONST_AREA_JELLY1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: JELLY
enum: ["Adamant 2h sword", "Adamant axe", "Adamant battleaxe", "Black 2h sword", "Mithril boots", "Mithril kiteshield", "Rune full helm", "Rune kiteshield", "Steel 2h sword", "Steel axe", "Steel battleaxe"]
*/
#define VAR_JELLY_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_JELLY_RULE (name:VAR_JELLY_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: JELLY
enum: ["Chaos rune", "Death rune"]
*/
#define VAR_JELLY_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_JELLY_RULE (name:VAR_JELLY_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: JELLY
enum: ["Chaos rune", "Coins", "Death rune", "Gold bar", "Thread"]
*/
#define VAR_JELLY_ENUMLIST_FILTER_OTHER []
CONST_JELLY_RULE (name:VAR_JELLY_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: JELLY
enum: ["Brimstone key", "Looting bag"]
*/
#define VAR_JELLY_ENUMLIST_FILTER_TERTIARY []
CONST_JELLY_RULE (name:VAR_JELLY_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Turoth Drops ====

#define CONST_AREA_TUROTH0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_TUROTH1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_TUROTH_RULE(_cond) rule ((area:CONST_AREA_TUROTH0 ||   area:CONST_AREA_TUROTH1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: TUROTH
enum: ["Bones"]
*/
#define VAR_TUROTH_ENUMLIST_FILTER_100 []
CONST_TUROTH_RULE (name:VAR_TUROTH_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: TUROTH
enum: ["Adamant full helm", "Leaf-bladed sword", "Mithril axe", "Mithril kiteshield", "Mystic robe bottom (light)", "Rune dagger", "Steel platelegs"]
*/
#define VAR_TUROTH_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_TUROTH_RULE (name:VAR_TUROTH_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: TUROTH
enum: ["Law rune", "Nature rune"]
*/
#define VAR_TUROTH_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_TUROTH_RULE (name:VAR_TUROTH_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: TUROTH
enum: ["Limpwurt root"]
*/
#define VAR_TUROTH_ENUMLIST_FILTER_MATERIALS []
CONST_TUROTH_RULE (name:VAR_TUROTH_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: TUROTH
enum: ["Brimstone key"]
*/
#define VAR_TUROTH_ENUMLIST_FILTER_TERTIARY []
CONST_TUROTH_RULE (name:VAR_TUROTH_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Warped Terrorbird Drops ====

#define CONST_AREA_WARPED_TERRORBIRD0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_WARPED_TERRORBIRD1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_WARPED_TERRORBIRD_RULE(_cond) rule ((area:CONST_AREA_WARPED_TERRORBIRD0 ||   area:CONST_AREA_WARPED_TERRORBIRD1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: WARPED_TERRORBIRD
enum: ["Bones"]
*/
#define VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_100 []
CONST_WARPED_TERRORBIRD_RULE (name:VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: WARPED_TERRORBIRD
enum: ["Adamant platebody", "Adamant warhammer", "Rune battleaxe", "Rune kiteshield", "Rune warhammer"]
*/
#define VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_WARPED_TERRORBIRD_RULE (name:VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: WARPED_TERRORBIRD
enum: ["Air rune", "Death rune", "Earth rune", "Law rune", "Soul rune"]
*/
#define VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_WARPED_TERRORBIRD_RULE (name:VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: WARPED_TERRORBIRD
enum: ["Adamantite ore", "Chocolate bomb", "Coins", "Diamond bolt tips", "Feather", "Raw shark", "Swamp tar", "Weapon poison"]
*/
#define VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_OTHER []
CONST_WARPED_TERRORBIRD_RULE (name:VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: WARPED_TERRORBIRD
enum: ["Brimstone key", "Clue scroll (hard)", "Terrorbird wing", "Warped sceptre (uncharged)"]
*/
#define VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_TERTIARY []
CONST_WARPED_TERRORBIRD_RULE (name:VAR_WARPED_TERRORBIRD_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Warped Tortoise Drops ====

#define CONST_AREA_WARPED_TORTOISE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_WARPED_TORTOISE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_WARPED_TORTOISE_RULE(_cond) rule ((area:CONST_AREA_WARPED_TORTOISE0 ||   area:CONST_AREA_WARPED_TORTOISE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: WARPED_TORTOISE
enum: ["Big bones"]
*/
#define VAR_WARPED_TORTOISE_ENUMLIST_FILTER_100 []
CONST_WARPED_TORTOISE_RULE (name:VAR_WARPED_TORTOISE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: WARPED_TORTOISE
enum: ["Adamant axe", "Adamant platebody", "Rune kiteshield", "Rune pickaxe", "Rune warhammer"]
*/
#define VAR_WARPED_TORTOISE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_WARPED_TORTOISE_RULE (name:VAR_WARPED_TORTOISE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: WARPED_TORTOISE
enum: ["Death rune", "Earth rune", "Mud rune"]
*/
#define VAR_WARPED_TORTOISE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_WARPED_TORTOISE_RULE (name:VAR_WARPED_TORTOISE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: WARPED_TORTOISE
enum: ["Adamantite ore", "Cabbage", "Coal", "Coins", "Perfect shell", "Pineapple", "Swamp tar", "Tangled toad's legs", "Tortoise shell", "Weapon poison"]
*/
#define VAR_WARPED_TORTOISE_ENUMLIST_FILTER_OTHER []
CONST_WARPED_TORTOISE_RULE (name:VAR_WARPED_TORTOISE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: WARPED_TORTOISE
enum: ["Brimstone key", "Clue scroll (hard)", "Curved bone", "Long bone", "Warped sceptre (uncharged)"]
*/
#define VAR_WARPED_TORTOISE_ENUMLIST_FILTER_TERTIARY []
CONST_WARPED_TORTOISE_RULE (name:VAR_WARPED_TORTOISE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Basilisk Knight Drops ====

#define CONST_AREA_BASILISK_KNIGHT0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_BASILISK_KNIGHT1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_BASILISK_KNIGHT_RULE(_cond) rule ((area:CONST_AREA_BASILISK_KNIGHT0 ||   area:CONST_AREA_BASILISK_KNIGHT1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: BASILISK_KNIGHT
enum: ["Big bones"]
*/
#define VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_100 []
CONST_BASILISK_KNIGHT_RULE (name:VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: BASILISK_KNIGHT
enum: ["Adamant kiteshield", "Adamant platelegs", "Rune axe", "Rune battleaxe", "Rune dagger", "Rune med helm", "Rune scimitar", "Rune spear"]
*/
#define VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_BASILISK_KNIGHT_RULE (name:VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: BASILISK_KNIGHT
enum: ["Astral rune", "Blood rune", "Death rune", "Law rune", "Nature rune"]
*/
#define VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_BASILISK_KNIGHT_RULE (name:VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: BASILISK_KNIGHT
enum: ["Adamantite ore", "Coins"]
*/
#define VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_OTHER []
CONST_BASILISK_KNIGHT_RULE (name:VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: BASILISK_KNIGHT
enum: ["Basilisk bone", "Basilisk head", "Basilisk jaw", "Brimstone key", "Curved bone", "Long bone", "Mystic hat (light)"]
*/
#define VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_TERTIARY []
CONST_BASILISK_KNIGHT_RULE (name:VAR_BASILISK_KNIGHT_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Wyrm Drops ====

#define CONST_AREA_WYRM0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_WYRM1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_WYRM_RULE(_cond) rule ((area:CONST_AREA_WYRM0 ||   area:CONST_AREA_WYRM1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: WYRM
enum: ["Wyrm bones"]
*/
#define VAR_WYRM_ENUMLIST_FILTER_100 []
CONST_WYRM_RULE (name:VAR_WYRM_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: WYRM
enum: ["Adamant 2h sword", "Adamant axe", "Adamant battleaxe", "Adamant sq shield", "Dragon dagger", "Earth battlestaff", "Red d'hide chaps", "Rune battleaxe", "Rune med helm"]
*/
#define VAR_WYRM_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_WYRM_RULE (name:VAR_WYRM_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: WYRM
enum: ["Blood rune", "Earth rune", "Fire rune", "Soul rune"]
*/
#define VAR_WYRM_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_WYRM_RULE (name:VAR_WYRM_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: WYRM
enum: ["Adamant arrowtips", "Bass", "Coins", "Pure essence", "Rune arrowtips"]
*/
#define VAR_WYRM_ENUMLIST_FILTER_OTHER []
CONST_WYRM_RULE (name:VAR_WYRM_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: WYRM
enum: ["Brimstone key"]
*/
#define VAR_WYRM_ENUMLIST_FILTER_TERTIARY []
CONST_WYRM_RULE (name:VAR_WYRM_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Kurask Drops ====

#define CONST_AREA_KURASK0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_KURASK1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_KURASK_RULE(_cond) rule ((area:CONST_AREA_KURASK0 ||   area:CONST_AREA_KURASK1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: KURASK
enum: ["Bones"]
*/
#define VAR_KURASK_ENUMLIST_FILTER_100 []
CONST_KURASK_RULE (name:VAR_KURASK_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: KURASK
enum: ["Adamant platebody", "Leaf-bladed battleaxe", "Leaf-bladed sword", "Mithril kiteshield", "Mystic robe top (light)", "Rune axe", "Rune longsword"]
*/
#define VAR_KURASK_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_KURASK_RULE (name:VAR_KURASK_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: KURASK
enum: ["Nature rune"]
*/
#define VAR_KURASK_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_KURASK_RULE (name:VAR_KURASK_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: KURASK
enum: ["Limpwurt seed"]
*/
#define VAR_KURASK_ENUMLIST_FILTER_MATERIALS []
CONST_KURASK_RULE (name:VAR_KURASK_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: KURASK
enum: ["Big bones", "Coconut", "Coins", "Flax", "Papaya fruit", "White berries"]
*/
#define VAR_KURASK_ENUMLIST_FILTER_OTHER []
CONST_KURASK_RULE (name:VAR_KURASK_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: KURASK
enum: ["Brimstone key", "Crystal shard", "Kurask head"]
*/
#define VAR_KURASK_ENUMLIST_FILTER_TERTIARY []
CONST_KURASK_RULE (name:VAR_KURASK_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Skeletal Wyvern Drops ====

#define CONST_AREA_SKELETAL_WYVERN0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_SKELETAL_WYVERN1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_SKELETAL_WYVERN_RULE(_cond) rule ((area:CONST_AREA_SKELETAL_WYVERN0 ||   area:CONST_AREA_SKELETAL_WYVERN1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: SKELETAL_WYVERN
enum: ["Wyvern bones"]
*/
#define VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_100 []
CONST_SKELETAL_WYVERN_RULE (name:VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: SKELETAL_WYVERN
enum: ["Battlestaff", "Earth battlestaff", "Rune axe", "Rune battleaxe", "Rune full helm", "Rune kiteshield", "Rune warhammer"]
*/
#define VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_SKELETAL_WYVERN_RULE (name:VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: SKELETAL_WYVERN
enum: ["Adamant bolts", "Air rune", "Blood rune", "Chaos rune", "Death rune", "Law rune", "Rune arrow", "Runite bolts", "Soul rune", "Water rune"]
*/
#define VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_SKELETAL_WYVERN_RULE (name:VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: SKELETAL_WYVERN
enum: ["Coins", "Lobster", "Prayer potion(4)", "Ranarr seed", "Runite crossbow (u)", "Snapdragon seed", "Unpowered orb"]
*/
#define VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_OTHER []
CONST_SKELETAL_WYVERN_RULE (name:VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: SKELETAL_WYVERN
enum: ["Brimstone key", "Draconic visage"]
*/
#define VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_TERTIARY []
CONST_SKELETAL_WYVERN_RULE (name:VAR_SKELETAL_WYVERN_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Gargoyle Drops ====

#define CONST_AREA_GARGOYLE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_GARGOYLE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_GARGOYLE_RULE(_cond) rule ((area:CONST_AREA_GARGOYLE0 ||   area:CONST_AREA_GARGOYLE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: GARGOYLE
enum: ["Adamant boots", "Adamant platelegs", "Rune 2h sword", "Rune battleaxe", "Rune full helm", "Rune platelegs"]
*/
#define VAR_GARGOYLE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_GARGOYLE_RULE (name:VAR_GARGOYLE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: GARGOYLE
enum: ["Chaos rune", "Death rune", "Fire rune"]
*/
#define VAR_GARGOYLE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_GARGOYLE_RULE (name:VAR_GARGOYLE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: GARGOYLE
enum: ["Gold bar", "Gold ore", "Mithril bar", "Pure essence", "Runite ore", "Steel bar"]
*/
#define VAR_GARGOYLE_ENUMLIST_FILTER_MATERIALS []
CONST_GARGOYLE_RULE (name:VAR_GARGOYLE_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: GARGOYLE
enum: ["Brimstone key", "Brittle key"]
*/
#define VAR_GARGOYLE_ENUMLIST_FILTER_TERTIARY []
CONST_GARGOYLE_RULE (name:VAR_GARGOYLE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Nechryael Drops ====

#define CONST_AREA_NECHRYAEL0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_NECHRYAEL1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_NECHRYAEL_RULE(_cond) rule ((area:CONST_AREA_NECHRYAEL0 ||   area:CONST_AREA_NECHRYAEL1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: NECHRYAEL
enum: ["Malicious ashes"]
*/
#define VAR_NECHRYAEL_ENUMLIST_FILTER_100 []
CONST_NECHRYAEL_RULE (name:VAR_NECHRYAEL_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: NECHRYAEL
enum: ["Adamant kiteshield", "Adamant platelegs", "Rune 2h sword", "Rune boots", "Rune full helm"]
*/
#define VAR_NECHRYAEL_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_NECHRYAEL_RULE (name:VAR_NECHRYAEL_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: NECHRYAEL
enum: ["Blood rune", "Chaos rune", "Death rune", "Law rune"]
*/
#define VAR_NECHRYAEL_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_NECHRYAEL_RULE (name:VAR_NECHRYAEL_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: NECHRYAEL
enum: ["Limpwurt seed"]
*/
#define VAR_NECHRYAEL_ENUMLIST_FILTER_MATERIALS []
CONST_NECHRYAEL_RULE (name:VAR_NECHRYAEL_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: NECHRYAEL
enum: ["Soft clay", "Tuna"]
*/
#define VAR_NECHRYAEL_ENUMLIST_FILTER_OTHER []
CONST_NECHRYAEL_RULE (name:VAR_NECHRYAEL_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: NECHRYAEL
enum: ["Brimstone key"]
*/
#define VAR_NECHRYAEL_ENUMLIST_FILTER_TERTIARY []
CONST_NECHRYAEL_RULE (name:VAR_NECHRYAEL_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Ancient Wyvern Drops ====

#define CONST_AREA_ANCIENT_WYVERN0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ANCIENT_WYVERN1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ANCIENT_WYVERN_RULE(_cond) rule ((area:CONST_AREA_ANCIENT_WYVERN0 ||   area:CONST_AREA_ANCIENT_WYVERN1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: ANCIENT_WYVERN
enum: ["Wyvern bones"]
*/
#define VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_100 []
CONST_ANCIENT_WYVERN_RULE (name:VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: ANCIENT_WYVERN
enum: ["Air battlestaff", "Battlestaff", "Granite boots", "Granite longsword", "Mystic air staff", "Rune battleaxe", "Rune full helm", "Rune kiteshield", "Rune pickaxe"]
*/
#define VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ANCIENT_WYVERN_RULE (name:VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: ANCIENT_WYVERN
enum: ["Adamant arrow", "Blood rune", "Death rune", "Nature rune", "Rune arrow", "Runite bolts"]
*/
#define VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ANCIENT_WYVERN_RULE (name:VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: ANCIENT_WYVERN
enum: ["Adamantite bar", "Adamantite ore", "Diamond", "Grimy cadantine", "Grimy dwarf weed", "Grimy kwuarm", "Grimy lantadyme", "Grimy ranarr weed", "Grimy torstol", "Magic seed", "Mahogany logs", "Mahogany seed", "Onyx bolt tips", "Ranarr seed", "Runite ore", "Seaweed spore", "Volcanic ash", "Yew seed"]
*/
#define VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_MATERIALS []
CONST_ANCIENT_WYVERN_RULE (name:VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: ANCIENT_WYVERN
enum: ["Coins", "Runite crossbow (u)", "Shark", "Super combat potion(2)", "Super restore(4)", "Supercompost"]
*/
#define VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_OTHER []
CONST_ANCIENT_WYVERN_RULE (name:VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: ANCIENT_WYVERN
enum: ["Brimstone key", "Wyvern visage"]
*/
#define VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_TERTIARY []
CONST_ANCIENT_WYVERN_RULE (name:VAR_ANCIENT_WYVERN_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Drake Drops ====

#define CONST_AREA_DRAKE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_DRAKE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_DRAKE_RULE(_cond) rule ((area:CONST_AREA_DRAKE0 ||   area:CONST_AREA_DRAKE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: DRAKE
enum: ["Drake bones"]
*/
#define VAR_DRAKE_ENUMLIST_FILTER_100 []
CONST_DRAKE_RULE (name:VAR_DRAKE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: DRAKE
enum: ["Black d'hide vambraces", "Dragon mace", "Mystic earth staff", "Red d'hide body", "Rune full helm"]
*/
#define VAR_DRAKE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_DRAKE_RULE (name:VAR_DRAKE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: DRAKE
enum: ["Death rune", "Fire rune", "Law rune", "Nature rune", "Rune arrow"]
*/
#define VAR_DRAKE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_DRAKE_RULE (name:VAR_DRAKE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: DRAKE
enum: ["Coins", "Diamond", "Swordfish"]
*/
#define VAR_DRAKE_ENUMLIST_FILTER_OTHER []
CONST_DRAKE_RULE (name:VAR_DRAKE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: DRAKE
enum: ["Brimstone key"]
*/
#define VAR_DRAKE_ENUMLIST_FILTER_TERTIARY []
CONST_DRAKE_RULE (name:VAR_DRAKE_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

// ==== Araxyte Drops ====

#define CONST_AREA_ARAXYTE0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_ARAXYTE1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_ARAXYTE_RULE(_cond) rule ((area:CONST_AREA_ARAXYTE0 ||   area:CONST_AREA_ARAXYTE1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: ARAXYTE
enum: ["Araxyte venom sack"]
*/
#define VAR_ARAXYTE_ENUMLIST_FILTER_100 []
CONST_ARAXYTE_RULE (name:VAR_ARAXYTE_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: ARAXYTE
enum: ["Adamant battleaxe", "Adamant longsword", "Aranea boots", "Rune dagger", "Rune med helm", "Rune platelegs"]
*/
#define VAR_ARAXYTE_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_ARAXYTE_RULE (name:VAR_ARAXYTE_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: ARAXYTE
enum: ["Air rune", "Blood rune", "Chaos rune", "Cosmic rune", "Death rune", "Earth rune", "Fire rune", "Law rune", "Nature rune", "Soul rune", "Water rune"]
*/
#define VAR_ARAXYTE_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_ARAXYTE_RULE (name:VAR_ARAXYTE_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: ARAXYTE
enum: ["Araxyte head", "Araxyte venom sack", "Coins"]
*/
#define VAR_ARAXYTE_ENUMLIST_FILTER_OTHER []
CONST_ARAXYTE_RULE (name:VAR_ARAXYTE_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

// ==== Hydra Drops ====

#define CONST_AREA_HYDRA0 [1000,2000,0,2000,1000,0] // [[Location 1 Name]]
#define CONST_AREA_HYDRA1 [2000,3000,0,3000,4000,0] // [[Location 2 Name]]
#define CONST_HYDRA_RULE(_cond) rule ((area:CONST_AREA_HYDRA0 ||   area:CONST_AREA_HYDRA1 || ETC AS NEEDED) && (_cond))

/*@ define:input
type: enumlist
label: 'Hide: Always'
group: HYDRA
enum: ["Hydra bones"]
*/
#define VAR_HYDRA_ENUMLIST_FILTER_100 []
CONST_HYDRA_RULE (name:VAR_HYDRA_ENUMLIST_FILTER_100) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Weapons and Armour'
group: HYDRA
enum: ["Battlestaff", "Black d'hide chaps", "Dragon longsword", "Fire battlestaff", "Mystic robe bottom", "Rune kiteshield", "Rune platebody", "Water battlestaff"]
*/
#define VAR_HYDRA_ENUMLIST_FILTER_WEAPONSANDARMOUR []
CONST_HYDRA_RULE (name:VAR_HYDRA_ENUMLIST_FILTER_WEAPONSANDARMOUR) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Runes and Ammunition'
group: HYDRA
enum: ["Blood rune", "Chaos rune", "Death rune", "Fire rune", "Law rune", "Water rune"]
*/
#define VAR_HYDRA_ENUMLIST_FILTER_RUNESANDAMMUNITION []
CONST_HYDRA_RULE (name:VAR_HYDRA_ENUMLIST_FILTER_RUNESANDAMMUNITION) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Materials'
group: HYDRA
enum: ["Grimy avantoe", "Grimy ranarr weed", "Grimy snapdragon", "Grimy torstol"]
*/
#define VAR_HYDRA_ENUMLIST_FILTER_MATERIALS []
CONST_HYDRA_RULE (name:VAR_HYDRA_ENUMLIST_FILTER_MATERIALS) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Other'
group: HYDRA
enum: ["Coins", "Dragon bones", "Monkfish", "Super combat potion(1)", "Super restore(1)"]
*/
#define VAR_HYDRA_ENUMLIST_FILTER_OTHER []
CONST_HYDRA_RULE (name:VAR_HYDRA_ENUMLIST_FILTER_OTHER) {
  hidden = true;
}

/*@ define:input
type: enumlist
label: 'Hide: Tertiary'
group: HYDRA
enum: ["Brimstone key"]
*/
#define VAR_HYDRA_ENUMLIST_FILTER_TERTIARY []
CONST_HYDRA_RULE (name:VAR_HYDRA_ENUMLIST_FILTER_TERTIARY) {
  hidden = true;
}

/*@ define:module:bosses
name: 'PvM: Bosses'
description: |
  Provides per-boss filtering for common bosses.
*/

/*@ define:module:wilderness
name: 'PvM: Wilderness Bosses'
description: |
  Provides per-boss filtering for common Wilderness bosses.
*/

/*@ define:module:dt2
name: 'PvM: DT2 Bosses'
description: |
  Provides per-boss filtering for Desert Treasure 2 bosses.
*/

/*@ define:module:slayerbosses
name: 'PvM: Slayer Bosses'
description: |
  Provides per-boss filtering for Slayer bosses.
*/